{"meta":{"title":"就和今天说早安","subtitle":null,"description":"生命不息  折腾不止","author":"WeiXiangYu","url":"http://xiangyuwei.github.io"},"pages":[{"title":"","date":"2017-07-01T08:41:47.410Z","updated":"2017-07-01T08:41:47.410Z","comments":true,"path":"tags/index.html","permalink":"http://xiangyuwei.github.io/tags/index.html","excerpt":"","text":"设置当前 page 类型为 tagstype: “tags” 设置当前页评论关闭comments: false"},{"title":"","date":"2017-07-01T08:42:18.461Z","updated":"2017-07-01T08:42:18.461Z","comments":true,"path":"categories/index.html","permalink":"http://xiangyuwei.github.io/categories/index.html","excerpt":"","text":"设置当前 page 类型为 categoriestype: “categories” 设置当前页评论关闭comments: false"}],"posts":[{"title":"斯人若彩虹，遇上方知有","slug":"七夕","date":"2017-08-31T08:12:31.170Z","updated":"2017-08-31T08:12:31.177Z","comments":true,"path":"2017/08/31/七夕/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/31/七夕/","excerpt":"","text":"我们分担寒潮、风雷、霹雳；我们共享雾霭流岚、虹霓，仿佛永远分离，却又终身相依","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"七夕","slug":"七夕","permalink":"http://xiangyuwei.github.io/tags/七夕/"},{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/tags/随笔/"}]},{"title":"Ubuntu 系统软件安装","slug":"Ubuntu 系统软件安装","date":"2017-08-27T10:36:33.856Z","updated":"2017-08-27T10:36:33.860Z","comments":true,"path":"2017/08/27/Ubuntu 系统软件安装/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/27/Ubuntu 系统软件安装/","excerpt":"注意安装要在安装包目录下。 ##安装eclipse+pydev教程 ##安装ss 参考github上内容下载shadowsock 123sudo add-apt-repository ppa:hzwhuang/ss-qt5sudo apt-get updatesudo apt-get install shadowsocks-qt5","text":"注意安装要在安装包目录下。 ##安装eclipse+pydev教程 ##安装ss 参考github上内容下载shadowsock 123sudo add-apt-repository ppa:hzwhuang/ss-qt5sudo apt-get updatesudo apt-get install shadowsocks-qt5 ssh 连接远程服务器用户user的home目录：/home/user的权限变成了777，造成不能正常登陆SSH，报如下错误：Permission denied (publickey,gssapi-with-mic SSH对公钥、私钥的权限和所有权的要求是非常严格的，总结如下： 1、下面两个目录的所有权必须是user，所属组也应该是user，权限必须为700 \\home\\user \\home\\user.ssh 2、下面公钥文件的所有权必须是user，所属组也应该是user，权限必须为644 \\home\\user.ssh\\authorized_keys 3、下面私钥文件的所有权必须是user，所属组也应该是user，权限必须是600 \\home\\user.ssh\\id_rsa 将ssh公钥加入本地ssh环境中1ssh-add ~./ssh/wenjianming 改变公钥文件权限1chmod 700 wenjianming cmd markdown1.去官网下载＂cmd_markdown_linux64.tar.gz＂并解压;2.运行 tar -xvf cmd_markdown_linux64.tar.gz3.双击Cmd Markdown，或在终端运行./Cmd\\ Markdown即可打开界面 gdebi可免于安装各种依赖，1sudo apt-get install gdebi 百度云下载开发者主页下载Bcloud ##安装微信在网上先去下载electronic-wechat-Linux https://github.com/geeeeeeeeek/electronic-wechat/releases双击打开解压后的文件夹，找到electronic-wechat这个文件，双击运行或者右键选择运行 ##安装qq参考博客Wine QQ 1 http://www.ubuntukylin.com/application/show.php?lang=cn&amp;id=279 百度云下载地址： 1 http://pan.baidu.com/s/1hr5Z4I4 安装说明： 下载后解压，在解压后文件夹下输入如下命令： [objc] view plain copyprint? sudo dpkg -i fonts-wqy-microhei_0.2.0-beta-2_all.deb sudo dpkg -i ttf-wqy-microhei_0.2.0-beta-2_all.deb sudo dpkg -i wine-qqintl_0.1.3-2_i386.deb 如果，最后一步报错。使用如下命令修复： sudo apt-get -f install sudo dpkg -i wine-qqintl_0.1.3-2_i386.deb 安装完成，就可以使用了。 ##安装flash 进入保存Adobe Flash Player压缩包的路径，将压缩包解压， 首先我们执行先命令：cd 下载，进入文件下载的目录，然后在执行命令：tar -zxvf install_flash_player_11_linux.x86_64.tar.gzsudo cp libflashplayer.so /usr/lib/firefox/browser/plugins 拷贝完之后再将“usr”目录下所有文件拷到/usr下，执行命令： sudo cp -r usr/* /usr ##网易云音乐 网易云音乐下载地址 http://music.163.com/#/download ##安装anaconda+tersorflow1.首先安装Anaconda 下载Linux对应的anaconda版本，下载到你的路径 ： PATH2.安装anaconda， 打开终端bash PATH/Anaconda3-4.0.0-linux-x86_64.sh 安装在其余路径的，请根据下面网站提示更改路径表 https://docs.continuum.io/anaconda/install 添加环境变量1234gedit ~/.bashrc#added by import PATH=&quot;/home/XXX/bin:$PATH&quot;soure ~/.bashrc 在终端或cmd中输入以下命令搜索当前可用的tensorflow版本 $ anaconda search -t conda tensorflow选择一个较新的CPU或GPU版本，如jjh_cio_testing/tensorflow-gpu的1.0.1版本，输入如下命令查询安装命令 $ anaconda show jjh_cio_testing/tensorflow-gpu 使用最后一行的提示命令进行安装 $ conda install –channel https://conda.anaconda.org/jjh_cio_testing tensorflow-gpu进入python，输入 import tensorflow as tf 如果没有报错说明安装成功。装完成后，使用如下命令生成一个名为tensorflow的conda环境，根据python版本选择正确的命令执行即可 Python 2.7$ conda create -n TensorFlow python=2.7 Python 3.4$ conda create -n TensorFlow python=3.4 Python 3.5$ conda create -n TensorFlow python=3.5使用如下命令进入TensorFlow环境：source activate tensorflow 在tensorflow下安装jupyter notebook 查看TensorFlow的版本： import tensorflow as tftf.version‘0.11.0rc2’ 查看TensorFlow安装路径： tf.path[‘/usr/local/ml/anaconda2/envs/tensorflow/lib/python2.7/site-packages/tensorflow’] 更新tensorflow pip install –upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp27-none-linux_x86_64.whlpip install –upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.1.0-cp27-none-linux_x86_64.whl安装theano和keras 在python 3.5中，安装keras之前要安装theano。 activate tensorflowconda install mingw libpythonconda install theanopip install keras ##安装pycharm下载、然后到/bin下 ./pycharm.sh 即可激活时使用服务器网址： http://idea.imsxm.com/ ##小知识~代表你的/home/用户明目录假设你的用户名是x，那么~/就是/home/x/.是代表此目录本身，但是一般可以不写所以cd ~/. 和cd ~ 和cd ~/效果是一样的但是.后面有东西又是另外一个问题，点在文件名头部，代表一个隐藏文件~/.local是你的主目录下一个.local的文件夹的路径，并且从.可以看出，这是一个饮藏文件，如果不用ls -a的话，一般ls是无法看到的apt:adobe-flashplugin?channel=$distro-partner ###换源 这个博客比较全. 阿里云 deb cdrom:[Ubuntu 16.04 LTS Xenial Xerus - Release amd64 (20160420.1)]/ xenial main restricteddeb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb http://mirrors.aliyun.com/ubuntu/ xenial multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-propertiesdeb http://archive.canonical.com/ubuntu xenial partnerdeb-src http://archive.canonical.com/ubuntu xenial partnerdeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial-security universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse 用vi和gedit 打开 /etc/apt/sources.list 将其中的us.archive 全部替换为 cn.archive即可，这样，以后使用apt-get下载就会使用源自http://cn.archive.ubuntu.com 了‘’’vi /etc/apt/sources.list ‘’’ udo cp /etc/apt/sources.list /etc/apt/sources.list_backup而后用gedit或其他编辑器打开: gksu gedit /etc/apt/sources.list kdesudo kate /etc/apt/sources.list gksu mousepad /etc/apt/sources.list gksu leafpad /etc/apt/sources.list (12.04版) gksu gedit /etc/apt/sources.list从下面列表中选择合适的源，替换掉文件中所有的内容，保存编辑好的文件: 注意：一定要选对版本然后，刷新列表:sudo apt-get update 注意：一定要执行刷新 ###显示所有文件（包含隐藏文件）ls -a ###只显示隐藏文件l.或者ls -d .* 复制多个文件 cp /home/user/{1,2,3} /home/usr/des 外接设备在 /media/wxy 目录下件之后带一个星号”*”的含义 表面这个文件是可执行文件","categories":[{"name":"Linux","slug":"Linux","permalink":"http://xiangyuwei.github.io/categories/Linux/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://xiangyuwei.github.io/tags/ubuntu/"},{"name":"软件安装","slug":"软件安装","permalink":"http://xiangyuwei.github.io/tags/软件安装/"}]},{"title":"没想到你是这样的Linux | 终端下有趣的命令合集","slug":"Linux 有趣命令","date":"2017-08-27T10:31:40.936Z","updated":"2017-08-27T17:11:29.813Z","comments":true,"path":"2017/08/27/Linux 有趣命令/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/27/Linux 有趣命令/","excerpt":"","text":"转载Freebuf toilet简介 toilet能用字母拼写出更大字母的工具，具体拼出什么字由命令后面的参数决定，不仅如此，它还能打印出各种风格的效果，比如彩色，金属光泽等。安装 apt-get install toilet 参数解释 toilet -f mono12 -F metal FreeBuf sl简介 你可能了解Linux的ls命令，并经常使用它来查看文件夹的内容。但是，有些时候你可能会拼写成sl ,这时我们应该如何获得一些乐趣而不是看见“command not found”呢？某编程牛人也经常犯把ls敲成sl的错误，所以他自己编了一个程序娱乐一下,这个程序的作用很简单，就是当你输入sl的时候终端会出现一个火车呼啸而过～～安装 apt-get install sl cmatrix简介 《黑客帝国》的代码雨视觉特效。安装 apt-get install cmatrix 参数解释 -B: 字体加粗-C: 颜色 后面跟上参数颜色 cowsay简介 Cowsay命令是一个有趣的命令。它会用ASCII字符描绘牛，羊和许多其他动物。但是不是每个Linux发行版都带有这个命令。安装 apt-get install cowsay 参数解释 列出所有支持可用的动物:cowsay -l list sciinema简介 本文其实最初很多特效都用这个终端去录制的，但是由于需要引用外部的js，所以最后这些终端下的特效才换成了gif图。asciineme 可以完美录制完美终端下所敲的命令。官网:https://asciinema.org/","categories":[{"name":"Linux","slug":"Linux","permalink":"http://xiangyuwei.github.io/categories/Linux/"}],"tags":[{"name":"软件安装","slug":"软件安装","permalink":"http://xiangyuwei.github.io/tags/软件安装/"},{"name":"有趣命令","slug":"有趣命令","permalink":"http://xiangyuwei.github.io/tags/有趣命令/"}]},{"title":"python小知识","slug":"python小知识","date":"2017-08-24T11:46:46.431Z","updated":"2017-08-27T17:11:31.731Z","comments":true,"path":"2017/08/24/python小知识/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/24/python小知识/","excerpt":"","text":"带一个星号（*）参数的函数传人的参数存储为一个元组（tuple）； 而带两个星号（*）参数的函数传人的参数则存储为一个字典（dict） np.where()[0] 表示行的索引， np.where()[1] 则表示列的索引 shape函数是numpy.core.fromnumeric中的函数，它的功能是读取矩阵的长度，比如shape[0]就是读取矩阵第一维度的长度","categories":[{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/tags/python/"},{"name":"软件安装","slug":"软件安装","permalink":"http://xiangyuwei.github.io/tags/软件安装/"}]},{"title":"深度学习资料","slug":"深度学习资料","date":"2017-08-23T12:24:13.801Z","updated":"2017-08-23T12:24:13.824Z","comments":true,"path":"2017/08/23/深度学习资料/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/23/深度学习资料/","excerpt":"深度学习资料2015年5月《自然》上刊登的一篇概述性论文《深度学习》（Deep learning），由我自己、Yoshua Bengio 、Geoff Hinton共同撰写。","text":"深度学习资料2015年5月《自然》上刊登的一篇概述性论文《深度学习》（Deep learning），由我自己、Yoshua Bengio 、Geoff Hinton共同撰写。 系统性的课本方面，由 Goodfellow、Bengio 和 Courville共同撰写的《深度学习》（Deep learning）（这个在网上有HTML版本，本书旨在帮助学生和从业人员入门机器学习，尤其是深度学习领域。HTML版本已经编辑完成，并且永久免费。网址：） 2012 年 IPAM上针对研究生的“深度学习和特征学习夏季课程”（这个夏季课程的授课老师包括 Geoff Hinton 、Yann LeCun、吴恩达、Yoshua Bengio等众多深度学习专家，历时半个多月时间，网上有完整视频录像：） 2015年在加拿大蒙特利尔市举行了“深度学习夏季课程”（该课程的对象为：已经具备的机器学习基本知识的研究生、业界工程师和研究人员，授课量十分丰富。 推荐一些关于特定平台的使用教程，比如Torch、TensorFlow 和 Theano。 百度paddle开发团队介绍的深度学习基本概念：深度学习适用于大数据.其中查了两个概念:word embedding,过拟合 知乎上关于深度学习入门的讨论,列了很多资料，一天搞懂深度学习图解深度学习这个网页动画做的很好。 机器学习中文社区 还有斯坦福大学公开课，讲机器学习,CS231 再看Dawn Song团队的一篇论文时查的VAEGAN（生成对抗网络）的最新应用状况结合代码讲解VAE-GAN比较透彻的一篇文章 应该搜搜深度学习暑期学校或深度学习项目实践 教程Udacity 深度学习知乎231翻译没有博士学位，照样玩转TensorFlow深度学习零基础入门深度学习 对抗样本MNIST的对抗噪声TensorFlow生成对抗样本（微信） https://yq.aliyun.com/articles/149583?utm_content=m_27089","categories":[{"name":"科研","slug":"科研","permalink":"http://xiangyuwei.github.io/categories/科研/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"}]},{"title":"当难过时","slug":"当难过时","date":"2017-08-22T07:47:08.179Z","updated":"2017-08-22T07:49:36.727Z","comments":true,"path":"2017/08/22/当难过时/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/当难过时/","excerpt":"","text":"一屋两人三餐四季","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"官方文档","slug":"官网文档","date":"2017-08-22T02:34:27.887Z","updated":"2017-08-22T07:52:16.801Z","comments":true,"path":"2017/08/22/官网文档/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/官网文档/","excerpt":"","text":"linux命令大全","categories":[{"name":"学习","slug":"学习","permalink":"http://xiangyuwei.github.io/categories/学习/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://xiangyuwei.github.io/tags/学习/"},{"name":"linux","slug":"linux","permalink":"http://xiangyuwei.github.io/tags/linux/"}]},{"title":"书单","slug":"书单","date":"2017-08-22T02:34:27.883Z","updated":"2017-08-22T07:55:30.674Z","comments":true,"path":"2017/08/22/书单/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/书单/","excerpt":"","text":"书单：理性乐观派","categories":[{"name":"读书","slug":"读书","permalink":"http://xiangyuwei.github.io/categories/读书/"}],"tags":[{"name":"书籍","slug":"书籍","permalink":"http://xiangyuwei.github.io/tags/书籍/"}]},{"title":"udacity知识点","slug":"udacity 知识点","date":"2017-08-22T02:34:27.882Z","updated":"2017-08-22T07:50:55.400Z","comments":true,"path":"2017/08/22/udacity 知识点/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/udacity 知识点/","excerpt":"","text":"splitext()作用类似与split(),不过它会根据扩展名分隔符而不是目录分隔符来分解路径 python 在内部使用两个字节来存储一个unicode，使用unicode对象而不是str的好处，就是unicode方便于跨平台。 你可以用如下两种方式定义一个unicode:Pythons1 = u”人生苦短”s2 = unicode(“人生苦短”, “utf-8”)12 s1 = u”人生苦短”s2 = unicode(“人生苦短”, “utf-8”) 在windows上面开始使用路径时，一定带上r，不然路径里面类似\\t \\n这种会被转义不信，自己找路径试试 Python pickle模块作用是持久化的储存数据。 numpy.random.shuffle打乱顺序函数：在做将caffe模型和预训练的参数转化为tensorflow的模型和预训练的参数，以便微调","categories":[{"name":"学习","slug":"学习","permalink":"http://xiangyuwei.github.io/categories/学习/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/tags/python/"}]},{"title":"anaconda+jupyter notebook安装","slug":"jupyter notebook 安装","date":"2017-08-09T15:08:56.192Z","updated":"2017-08-09T15:09:54.812Z","comments":true,"path":"2017/08/09/jupyter notebook 安装/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/09/jupyter notebook 安装/","excerpt":"","text":"安装anaconda2和anaconda3先在清华镜像站下载2和3可以任意先安装一个版本，然后另一个版本安装在/envs/py2路径下，py2是自己起的文件名。再打开CMD下载jupyter notebook 1pip install jupyter notebook notebook同时有两个版本时，可在kernel文件夹中，例如路径为D:\\ProgramData\\Anaconda3\\share\\jupyter\\kernels，放两个kernel 可把/envs文件下的python拷贝到此路径中。","categories":[{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/categories/python/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"编程","slug":"编程","permalink":"http://xiangyuwei.github.io/tags/编程/"}]},{"title":"自动备份Hexo博客源文件","slug":"自动备份hexo","date":"2017-08-09T12:46:16.246Z","updated":"2017-07-25T13:46:11.120Z","comments":true,"path":"2017/08/09/自动备份hexo/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/09/自动备份hexo/","excerpt":"","text":"原文出自：http://zhujiegao.com/2015/12/06/automatic-backup/ 先安装git和node #原理 通过通过监听Hexo的其它事件来完成自动执行Git命令完成自动备份。通过查阅Hexo文档，找到了Hexo的主要事件，见下表： 事件名 事件发生时间 deployBefore 在部署完成前发布 deployAfter 在部署成功后发布 exit 在 Hexo 结束前发布 generateBefore 在静态文件生成前发布 generateAfter 在静态文件生成后发布 new 在文章文件建立后发布 实现 在Github下创建新的仓库，取名hexo 进入本地hexo文件夹，执行以下命令 123456git initgit remote add origin git@github.com:XXX/XXX.gitgit pull -u origin mastergit add .git commit -m &quot;添加hexo源码文件备份&quot;git pull -u origin master 3.安装shelljs模块要实现这个自动备份功能，需要依赖Node.js的一个shelljs模块,该模块重新包装了child_process,调用系统命令更加的方便。该模块需要安装后使用 1npm install --save shelljs 4 自动备份脚本 待到模块安装完成，在Hexo根目录的scripts文件夹下新建一个js文件，文件名随意取。 ps: 如果没有scripts目录，请新建一个。 然后在脚本中，写入以下内容： 123456789101112131415161718192021222324252627282930require(&apos;shelljs/global&apos;);try &#123; hexo.on(&apos;deployAfter&apos;, function() &#123;//当deploy完成后执行备份 run(); &#125;);&#125; catch (e) &#123; console.log(&quot;产生了一个错误&lt;(￣3￣)&gt; !，错误详情为：&quot; + e.toString());&#125;function run() &#123; if (!which(&apos;git&apos;)) &#123; echo(&apos;Sorry, this script requires git&apos;); exit(1); &#125; else &#123; echo(&quot;======================Auto Backup Begin===========================&quot;); cd(&apos;D:/hexo&apos;); //此处修改为Hexo根目录路径 if (exec(&apos;git add --all&apos;).code !== 0) &#123; echo(&apos;Error: Git add failed&apos;); exit(1); &#125; if (exec(&apos;git commit -am &quot;Form auto backup script\\&apos;s commit&quot;&apos;).code !== 0) &#123; echo(&apos;Error: Git commit failed&apos;); exit(1); &#125; if (exec(&apos;git push origin master&apos;).code !== 0) &#123; echo(&apos;Error: Git push failed&apos;); exit(1); &#125; echo(&quot;==================Auto Backup Complete============================&quot;) &#125;&#125;","categories":[{"name":"Web","slug":"Web","permalink":"http://xiangyuwei.github.io/categories/Web/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiangyuwei.github.io/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"http://xiangyuwei.github.io/tags/GitHub/"}]},{"title":"今夜 仰望星空","slug":"今夜 仰望星空","date":"2017-07-05T15:40:32.620Z","updated":"2017-07-05T16:00:41.037Z","comments":true,"path":"2017/07/05/今夜 仰望星空/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/05/今夜 仰望星空/","excerpt":"","text":"一片朦胧的夕光衬着暗绿的楼影你从雾雨中显现带着浴后的红晕多少语言和往事都在微笑中消溶我们走进了夜海去打捞遗失的繁星","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"寄语","slug":"寄语","permalink":"http://xiangyuwei.github.io/tags/寄语/"},{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"人生百态 千翻滋味","slug":"让我接受平庸的生活","date":"2017-07-05T15:35:12.618Z","updated":"2017-07-05T15:56:25.087Z","comments":true,"path":"2017/07/05/让我接受平庸的生活/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/05/让我接受平庸的生活/","excerpt":"","text":"红黄蓝白黑，酸甜苦辣咸。每个人都带着一生的历史，半个月的哀乐，在街上走。 ——汪曾祺 让我接受平庸的生活 作家苏芩在她的新书《你要世俗地活着，才有不俗的未来》里也讲过这样一段话： 了解俗世的规则，也懂得世俗外的享受，才深切地明白，如果没有足够的力量去赢得生活，那一切优雅的享用，都会转瞬即逝。美是一种力量，任何软绵绵的优雅都不值得被欣赏，你要知道：你能驾驭的，才是你真正拥有的。 因此，我们都需要修炼，在尘世的烟火中，修炼出一颗通透的心。成为这样一种人：可以很俗世，却又似在世俗之外。 希望你也可以，如愿活成自己梦想的样子。 不知，还在俗世中忙碌着的你，是否已然活成了自己梦想的样子了呢？ 我们终归要回到俗世的繁华中去磨砺成长，增长出足够的力量来支撑和应对庸忙的生活。所谓的诗意生活，并不是疏离尘世，而是让自己在尘世中修炼得更加清澈，通透。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"寄语","slug":"寄语","permalink":"http://xiangyuwei.github.io/tags/寄语/"},{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"利用Wireshark任意获取QQ好友IP实施精准定位","slug":"利用wireshark进行qq好友定位","date":"2017-07-04T15:43:08.956Z","updated":"2017-07-04T15:53:42.884Z","comments":true,"path":"2017/07/04/利用wireshark进行qq好友定位/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/04/利用wireshark进行qq好友定位/","excerpt":"","text":"利用Wireshark任意获取QQ好友IP实施精准定位在freebuf上看到了利用Wireshark任意获取QQ好友IP实施精准定位这篇文章，就想试试。wireshark抓取数据包，然后查找。 1,选择搜索 “字符串”; 2,选择搜索 “分组详情”; 3,填写搜索数据 “020048”; 当发现查找能自动定位到连接数据的时候就可以关闭电话邀请一个IP在线定位的网站openGPS.cn 进入页面后，选择高精度IP定位.wireshark功能使用的详细介绍 wireshark抓包常见提示含义解析 我是如何轻松拿到Google$1337现金奖励这篇文章主要是讲漏洞挖掘可适当关注Fofa、Shodan、Zoomeye等网络空间数据平台。","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://xiangyuwei.github.io/categories/数据分析/"}],"tags":[{"name":"wireshark","slug":"wireshark","permalink":"http://xiangyuwei.github.io/tags/wireshark/"}]},{"title":"沉默的大多数","slug":"一句话","date":"2017-07-04T08:53:43.987Z","updated":"2017-07-04T15:53:40.798Z","comments":true,"path":"2017/07/04/一句话/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/04/一句话/","excerpt":"","text":"一句话 区别对待 方向 伙伴 理解 话语权 探索与重复 晚安，好眠。：）","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"一句话","slug":"一句话","permalink":"http://xiangyuwei.github.io/tags/一句话/"}]},{"title":"有趣的尝试","slug":"寄语","date":"2017-07-04T03:55:58.166Z","updated":"2017-07-04T04:26:04.317Z","comments":true,"path":"2017/07/04/寄语/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/04/寄语/","excerpt":"","text":"寄语 “大部分人都是不好不坏，平庸乏味，跟一次性塑料饭盒一样。对这种长方形塑料，你连闻一闻的兴趣都不会有。大多数音乐、大部分书，都是。他们的刻度永远都打在一个最正确的正中间，永远不犯错、永远不会失败，最终出来一个光溜溜的东西。但美是不正确，美是错乱。”在《所有失败的鱼》里，绿妖这样说道。 明天就是新的一周，希望你也能开始一些全新而有趣的尝试。 晚安，好眠。：）","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"寄语","slug":"寄语","permalink":"http://xiangyuwei.github.io/tags/寄语/"},{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"DigitalOcean+shadowSocks + Docker 科学上网+挖矿","slug":"DigitalOcean+shadowSocks + Docker 科学上网","date":"2017-07-02T05:32:01.269Z","updated":"2017-08-09T06:57:37.555Z","comments":true,"path":"2017/07/02/DigitalOcean+shadowSocks + Docker 科学上网/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/02/DigitalOcean+shadowSocks + Docker 科学上网/","excerpt":"ss科学上网注册DigitalOcean，从这个链接 https://m.do.co/c/e70af193c2c0 进去可以有$10的优惠券。","text":"ss科学上网注册DigitalOcean，从这个链接 https://m.do.co/c/e70af193c2c0 进去可以有$10的优惠券。 参考教程上的步骤创建了一个Droplet,选了洛杉矶的服务器，不过好像有点慢，下载了DOcker,拉取了Docker中shadowSock镜像，端口号为1984,。另一篇参考。这篇里有详细解释。 这几天发现上不了外网，用docker ps 发现报错，连接不到守护进程，service docker stop 后 docker -d ,service docker start查看docker是否在运行ps aux | grep dockerdocker info查看信息2017/7/4 11:53:55windows查看端口被占用：123netstat -anonet -ano|findstr &quot;***&quot;tasklist|findstr &quot;***&quot; linux查看端口被占用123ps -aux | grep tomcatnetstat -apnps -aux | grep *** 使用shadowsocks，搭建ipv6 VPN，让ipv4上ipv6，下载速度提升到100M 一键脚本配置 前面配置的无法使用，原因不明，又用下图的配置了一遍。 挖矿第一步百度一不小心看到了服务器挖莱特比，心血来潮试了一下挖莱特币 接着在服务器上安cpuminer,最终没装上。先下载一堆依赖包,又在github上下载包,参考这篇博客，但`./config报错 gcc: error: unrecognized command line option ‘-V’gcc: fatal error: no input filescompilation terminated.configure:3447: $? = 1configure:3436: gcc -qversion &gt;&amp;5gcc: error: unrecognized command line option ‘-qversion’gcc: fatal error: no input filescompilation terminated.configure:3447: $? = 1configure:3467: checking whether the C compiler worksconfigure:3489: gcc -03 conftest.c &gt;&amp;5gcc: error: unrecognized command line option ‘-03’configure:3493: $? = 1configure:3531: result: no 按照这上面添加环境变量并没有解决。 这篇文章里的方法还没试。 Xshell生成密钥过程中想用Xshell连接服务器，发现需要用户密钥. 1#ssh-keygen -t rsa 生成密钥对服务器上的密钥在authorized_key文件中 安装vsftpd在服务器上安装了vsftpd which vsftpd看有没有安装vsftpd。123service vsftp start #启动服务service vsftp stop # 停止服务service vsftp restart #重启服务 用vi 修改配置文件 ：q是退出，当不存在任何没有保存的修改时它才会用:q!是退出并不保存。u可以取消刚才的修改，ctrl＋R可以取消你所取消的修改。注意：有：号的命令是先ESC，再：命令回车执行，不带：的，就是ESC后再输入执行。忘 了当前编辑的是什么文件，可以用ctrl＋G来查看。VI中可以执行命令。:!command就可以执行命令。命令完成后，可以按回车返回。甚至可以在VI中使用SHELL，（：！bash）从SHELL中执行几个命令后，exit退回到VI。保存退出，ZZ或:wq。 FTP传输ftp 传输有主动模式和被动模式，由客户端选择，一般cmd是主动模式，应在控制面板internet选项高级中把被动ftp关闭1ftp&gt;passive #可开/关被动模式 ftp 命令： open ip 打开连接 put 文件 上传文件 get 文件名 下载文件 close 关闭连接 bye/quit 离开ftp ftp 默认传输的文件在c盘的用户目录下标签（空格分隔）： 科学上网","categories":[{"name":"Web","slug":"Web","permalink":"http://xiangyuwei.github.io/categories/Web/"}],"tags":[{"name":"DigitalOceam","slug":"DigitalOceam","permalink":"http://xiangyuwei.github.io/tags/DigitalOceam/"},{"name":"科学上网","slug":"科学上网","permalink":"http://xiangyuwei.github.io/tags/科学上网/"},{"name":"Docker","slug":"Docker","permalink":"http://xiangyuwei.github.io/tags/Docker/"}]},{"title":"Hexo + github 博客搭建过程","slug":"Hexo + github 博客搭建过程","date":"2017-07-01T08:01:09.793Z","updated":"2017-07-02T06:01:16.839Z","comments":true,"path":"2017/07/01/Hexo + github 博客搭建过程/","link":"","permalink":"http://xiangyuwei.github.io/2017/07/01/Hexo + github 博客搭建过程/","excerpt":"最近想建个博客记录一下平时的一些技术细节，以后可以随时翻翻，发现以前做过的事总是很容易忘记，真是好记性不如烂笔头,顺便整理一下思路。 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 搭建环境 Windows10 64位 node@4.4 后变成6.1.0 hexo@3.3.7","text":"最近想建个博客记录一下平时的一些技术细节，以后可以随时翻翻，发现以前做过的事总是很容易忘记，真是好记性不如烂笔头,顺便整理一下思路。 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 搭建环境 Windows10 64位 node@4.4 后变成6.1.0 hexo@3.3.7 前期 百度知道了搭建博客用wordpress等需要有服务器，买不起，虽然后面知道了GitHub大礼包，有digitalOcean 提供的优惠劵，但已经不想折腾wordpress了，以后再说。所以用了github page这个功能，再加上hexo ,类似的还有jekyll,但jekyll 好像命令有些复杂，而且需要依赖的东西有点多，所以选了hexo,hexo 用户量级好像不如jekyll。 Hexo 是什么 Hexo 可以快速，简洁，高效的搭建博客框架，方便的生成静态网页 托管在github上。它是台湾的@tommy351编写的，基于Node.js。 搭建博客安装git参考了博客http://blog.csdn.net/SmallCheric/article/details/51049683的教程，下载并安装了[Git](https://git-for-windows.github.io/) 用以下命令查看git版本1git --version 安装Node.jswindows环境下的Node.js的安装很简单,只需要下载客户端一路next就行了,第一次选择前面提到博客中的v4.4.0LTS版本64位的，后来因为css样式显示不出来，又下载了新版本V6.110，升级node又是一番折腾，后面再提。用以下命令查看版本号：1node -v 安装HexoNode.js 安装完成后，在电脑任意位置，右键选择GitBash ,执行npm命令 npm install -g hexo 安装完成后，建立一个文件夹（E:\\Hexo）,在建立的文件夹内右键,选择gitbush,执行以下命令，就在目标文件夹下创建建立博客所需的文件。 hexo init 然后 hexo install 初始化完成目录图： 这是参考了http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html的教程12＄hexo g #生成$hexo s #启动服务，本地浏览 执行以上命令，hexo会把public文件夹里的东西提交到github上，同时在public 文件夹中生成相关html文件。 hexo s 开启本地服务端口，打开浏览器http://localhost:4000 即可看到内容，啊哈^-^ ,没想到写到这个竟然解决的本地没有css的问题，原来自己一直是点击Index.html打开网页，不是用以上网址打开，所以css样式显示不出来，但是为什么呢，不求甚解，难道是不用那个网址没法渲染，找不到css样式，但自己看了看源代码，觉得应该能找到啊，不解。css 代码：1&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/./main.b3331d.css&quot;&gt; 顺便记录一下路径的问题： ./ 当前路径/ 网站根路径../ 上一层目录，如../../表示上上层目录 当前路径是指和本文件同在一个文件夹下，这是可以用相对路径。 修改端口号：执行命令hexo s -p 5000 修改主题官方主题下载了2个主题：hexo-them-jekyll和hexo-theme-yilia 下载主题：1$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 下载后的主题在themes文件夹中，修改—config.yml中的theme: landscape为theme: yilia,然后执行hexo g生成，注意hexo g 每次执行都会把public 文件夹的东西更新一次，还有theme 冒号后面注意有空格。 如果有问题，执行hexo clean,清理public 的内容，然后重新生成和发布。 上传 hexo上传代码会把以前的代码都删掉，注意备份。 首先，配置ssh_key,用ssh key 解决本地与服务器连接的问题。可参考百度经验。1$ cd ~/.ssh #检查本机已存在的ssh密钥 1$ ssh-keygen -t -C \"github注册邮件地址\" 会生成一个文件.ssh\\id_rsa.pub，复制里面的内容到github，个人设置-》SSH and GPG key中-》New SSh key 测试是否成功：1$ ssh -T git@github.com 然后配置：12$ git config --global user.name &quot;**&quot;// 你的github用户名，非昵称$ git config --global user.email &quot;xxx@qq.com&quot;// 填写你的github注册邮箱 配置：config_yml中deploy,1234deploy: type: git repository: git@github.com:lian/lian.github.io.git branch: master 后又改成这个，http似乎不能写成https1234deploy: type: git repository: http://github.com/lian/lian.github.io.git branch: master 如果报deployer not found,是因为没有安装插件。打开 git bash，输入hexo d提交改动代码到github。 保留CNAME等文件把这些文件放到source文件夹中，这里的所有文件会原样复制到public文件夹中。http://blog.liuxianan.com/build-blog-website-by-hexo-github.html 中可下载作者的md文件。 介绍markdawn 语法Hexo文件夹结构 设置next主题,参考博客。 搭建过程中问题1、生成时hexo 报错 Cannot read property ‘replace’ of null 解决： _config.yml 配置文件中的url 设置错误 123456# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://lian.github.ioroot: \\permalink: :year/:month/:day/:title/permalink_defaults: root 后是根路径，与css文件路径有关 2、 ERROR Plugin load failed: hexo-generator-json-content 升级node.js到最新稳定版升级node，参照博客,先安装gnvm，点击exe发现在cmd下找不到，弃之，后直接下载node安装。 执行命令 npm i hexo-generator-json-content –save 3、提交时出现错误ERROR Plugin load failed: hexo-deployer-git 解决 执行 npm install hexo-deployer-git –save 4、config 中文乱码 在sublime里打开，保存为GBK-8格式 常见hexo命令1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写：1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令：12hexo s -g #生成并本地预览hexo d -g #生成并上传 markdown12345678910在英文输入法下:&apos;&apos;&apos;&apos;&apos;&apos; 表示 代码块 #到###### 表示标题 ** dd** 加粗 * dd* 斜体 [ ]（） 链接&lt;！-- more --&gt;！[init]（连接） 图片* 标号 title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3]#文章标签，可空，多标签请用格式，注意:后面有个空格 域名解析用namecheap解析域名步骤参考文章 关于A解析和CNAME解析的区别： A解析：只能填IP地址，IP地址如果换了的话就需要换解析记录CNAME解析：解析到另一个域名，即使被指向的域名的ip发生变化，也不需要更改解析记录。CNAME优先级高于A解析（至少在DNSPOD是这样的） 给网站添加favicon这个和主题有关，默认可能没有，浏览器打开后根据开发者工具里可以看到当前主题下’favicon’的具体路径和要求文件格式，对应做一个就可以了。有时候是’png’但也有时候强制要求’.ico’，可以去比特虫等网站在线制作。","categories":[{"name":"Web","slug":"Web","permalink":"http://xiangyuwei.github.io/categories/Web/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiangyuwei.github.io/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"http://xiangyuwei.github.io/tags/GitHub/"}]}]}