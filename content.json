{"meta":{"title":"就和今天说早安","subtitle":null,"description":"胸怀猛虎 细嗅蔷薇","author":"WeiXiangYu","url":"http://xiangyuwei.github.io"},"pages":[{"title":"about","date":"2017-12-02T12:30:50.000Z","updated":"2017-12-03T10:07:30.135Z","comments":true,"path":"about/index.html","permalink":"http://xiangyuwei.github.io/about/index.html","excerpt":"","text":"痛觉神经敏感音乐和电影的杂食主义者戴上耳机就是聋子 摘掉眼镜就是瞎子喜欢咬扁吸管用力呼吸"},{"title":"categories","date":"2017-12-02T12:32:36.000Z","updated":"2017-12-02T12:34:18.385Z","comments":false,"path":"categories/index.html","permalink":"http://xiangyuwei.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-12-02T12:32:03.000Z","updated":"2017-12-02T12:34:35.141Z","comments":false,"path":"tags/index.html","permalink":"http://xiangyuwei.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Michal Kosinski 隐私挖掘","slug":"隐私挖掘前期","date":"2018-01-23T14:45:48.879Z","updated":"2018-01-23T15:05:53.056Z","comments":true,"path":"2018/01/23/隐私挖掘前期/","link":"","permalink":"http://xiangyuwei.github.io/2018/01/23/隐私挖掘前期/","excerpt":"","text":"Michal KosinskiBuilding a profile of subjective well-being for social media usersBuilding a profile of subjective well-being for social media users by L. Chen , T. Gong , M. Kosinski, D. J. Stillwell, R. L. Davidson. PLOS ONE, 2017. 主观幸福包括“情感”和“生活满意度”（SWL）。本研究提出了一种基于Facebook状态更新的社交媒体语言来构建主观幸福感的统一方法。通过情绪分析来生成用户的情感分数，训练一个随机森林模型来预测SWL，使用情感分数和状态更新的其他语言功能。结果表明：计算机选择的功能类似于早期研究中确定的SWL的关键预测因子;机器预测的SWL与自我报告的SWL中度相关（r = 0.36，p &lt;0.01），表明基于语言的评估可以构成有效的SWL测量;机器评估的情绪分数与之前的实验研究中报告的情况类似;机器预测的主观幸福感也可以反映其他心理特征如抑郁（r = 0.24，p &lt;0.01）。这项研究提供了重要的洞察心理预测使用多个机器评估组件和纵向或密集心理评估使用社交媒体语言。 Private traits and attributes are predictable from digital records of human behavior我们展示了易于访问的数字行为记录，Facebook的喜欢，可以用来自动和准确地预测一系列高度敏感的个人属性，包括：性取向，种族，宗教和政治观点，人格特质，智力，快乐，使用成瘾物质，父母分居，年龄和性别。所提供的分析是基于超过58,000志愿者的数据集，他们提供了他们的Facebook赞，详细的人口统计资料以及几项心理测试的结果。所提出的模型使用降维来预处理喜欢的数据，然后进入逻辑/线性回归预测喜欢的个人psychodemographic配置文件。在88％的案例中，模型正确地区分了同性恋和异性恋者，非裔美国人和高加索裔美国人在95％的案例中，民主党和共和党在85％的案例中也是如此。对于人格特质“开放性”，预测准确性接近标准人格测验的重测精度。我们举例说明属性和喜欢之间的关联，并讨论对在线个性化和隐私的影响。 Crowd IQ: Measuring the Intelligence of Crowdsourcing Platforms我们根据标准智商问卷测量众包表现，并在不同条件下考察亚马逊的机械特克（AMT）表现。 其中包括所提供的支付金额的变化，不正确的答复会影响工人的声誉，阈值参与AMT工作者的信誉分数，每个任务的工人数量。 我们发现，由高信誉的工作人员组成的人群比低信誉的人群获得更高的绩效，并且支付量的影响是非单调的 - 既付出太多也影响绩效。 此外，当任务设计成不正确的响应会降低工人的信誉评分时，可以获得更高的绩效。 使用大多数票数来对同一任务的多个响应进行汇总可以显着提高绩效，这可以通过动态分配工作人员来完成任务来进一步提高，从而打破关系。 Personality, Gender, and Age in the Language of Social Media: The Open-Vocabulary Approach我们分析了7万5千名志愿者的Facebook消息中收集到的7亿个词汇，短语和主题实例，他们也进行了标准的人格测试，发现语言的个性，性别和年龄有显着的变化。在我们的开放词汇技术中，数据本身驱动对区分人的语言进行全面的探索，找到与传统的闭合词汇类别分析无法捕捉的联系。我们的分析揭示了社会心理过程产生的新的结果，这些结果是有效的（例如，生活在高海拔地区的受试者谈论山脉），配合其他研究（例如，神经质的人不成比例地使用“生病”这个词，抑郁“），提出新的假设（例如，积极的生活意味着情绪的稳定），并给出详细的见解（男性使用”我的“所有格，当提到他们的”妻子“或”女朋友“比女性更常使用”丈夫“或”男友“）。到目前为止，这代表着语言和个性最大的研究 Computer-based personality judgments are more accurate than those made by humans判断别人的人格是成功社会生活的基本技能，因为人格是人们互动，行为和情感背后的关键驱动力。虽然准确的个性判断来源于社会认知技能，机器学习的发展表明计算机模型也可以作出有效的判断。这项研究比较了人类和计算机为基础的人格判断的准确性，使用完成了100项个性问卷调查的86,220名志愿者的样本。我们发现：（i）基于通用数字足迹（Facebook喜欢）的计算机预测比参与者的Facebook朋友使用个性问卷（r = 0.49）更准确（r = 0.56）; （二）计算机模型显示较高的法官间协议; （iii）计算机个性判断在预测物质使用，政治态度和身体健康等生活结果时具有较高的外部效度;对于一些结果，他们甚至超过了自我评价的个性得分。计算机在人格判断上超越人类在心理评估，市场营销和隐私领域面临着巨大的机遇和挑战。 Mining Big Data to Extract Patterns and Predict Real-Life Outcomes本文旨在向读者介绍基本工具，可用于获取见解和使用大型数据集建立预测模型。数字环境中最近的用户扩散导致出现大量样本，其中包含大量人类行为，交流和社会交往的痕迹。这样的样本提供了大大提高我们对个人，团体和社会的理解的机会，但是他们的分析提出了独特的方法论挑战。在本教程中，我们将讨论这些数据的潜在来源，并解释如何有效地存储这些数据。然后，我们介绍两种经常用于提取模式和降低大数据集的维数的方法：奇异值分解和潜在狄利克雷分配。最后，我们演示如何使用从数据中提取的维度或集群以交叉验证的方式构建预测模型。文本伴随着R代码和一个样本数据集的例子，使读者可以练习这里讨论的方法。网站（http://dataminingtutorial.com）提供了额外的学习资源。 Manifestations of user personality in website choice and behaviour on online social networks个性的人格差异影响着用户的在线活动，就像他们在离线世界中所做的那样。 这项基于超过三分之一百万用户的样本的工作，预测了用户在网络环境中的行为（由他们的网站选择和Facebook个人资料特征所捕获）与他们的个性有关，如通过标准五因素 模型个性问卷。 结果显示，用户个性，网站偏好和Facebook个人资料特征之间存在心理上的有意义的联系。我们展示了网站受众在个性方面的差异，呈现个性和Facebook个人特征之间的关系， 个性可以从Facebook的个人资料特征预测。我们的结论是，预测用户的个性配置文件可以用来个性化内容，优化搜索结果，并改善在线广告。 大五人格 Facebook as a Research Tool for the Social SciencesFacebook正在迅速获得认可，成为社会科学的强大研究工具。它构成了一个庞大而多样的参与者池，可以选择在线和离线学习。此外，它通过存储用户的人口统计资料，社会互动和行为的详细记录来促进数据收集。通过与会者的同意，这些数据可以以方便，准确和廉价的方式进行追溯记录。基于我们在设计，实施和维护多个基于Facebook的心理学研究方面的经验，吸引了超过1000万的参与者，我们展示了如何使用Facebook招募参与者，使他们有效地实现自我激励，并最大化他们的参与。我们还概述了使用Facebook进行研究的最重要的机会和挑战，提供了一些关于如何在Facebook上成功实施研究的实用指南，最后讨论道德考量。 Psychological targeting as an effective approach to digital mass persuasion人们在许多不同的环境下都能够有说服力的沟通：政府，公司和政党使用劝说性的呼吁，鼓励人们吃得更健康，购买特定的产品，或者投票给特定的候选人。实验室研究表明，这种有说服力的诉求在根据个人独特的心理特征量身定制时更能有效地影响行为。然而，现实世界中大规模心理劝说的调查受到心理评估问卷性质的阻碍。然而，最近的研究表明，人们的心理特征可以从他们的数字化脚印中准确地预测出来，比如他们的Facebook Like或Tweets。利用数字足迹这种形式的心理评估，我们测试心理说服对生态环境中人们行为的影响。在三次实地调查中，超过350万人拥有心理定位的广告，我们发现将说服性诉求的内容与个人的心理特征相匹配，显着地改变了他们的行为，如点击和购买。与人们的外向性或开放性经验水平相匹配的有说服力的呼吁导致了高达40％的点击量和高达50％的购买量，而不是它们的不匹配或非个性化对手。我们的研究结果表明，心理定位的应用使得有可能通过针对目标受众的心理需求定制说服性的呼吁来影响大群人的行为。我们讨论这种方法在帮助个人做出更好的决定方面的潜在好处，以及与操纵和隐私相关的潜在缺陷。 前者在定位用户时关注的人口或行为属性可能是在下午2点至4点通过谷歌搜索“足球世界杯”的“18-45岁女性”。而心理定位，则是关注一个人的基本性格特质和心理诉求，由此能在更大的背景下解释并预测偏好。http://www.sohu.com/a/207064190_622275 Personality andWebsite Choice我们发现，喜欢网站的偏好，比如对线下世界中的对象的偏好，受到个性的影响。 我们结合了超过160,000名用户的个性概况和网站选择，并调查不同的网站是否吸引了不同性格的受众。 我们使用两个独立的网站选择来源，显示网站受众通常具有不同的人格特征，在网站和网站类别相关的人际性和偏好之间存在着心理上有意义的关系，并且结果在独立 数据源。 我们的发现对于对网站内容个性化，文本搜索，搜索结果优化和在线营销感兴趣的研究人员非常有用。 Measurement and prediction of individual and group differences in the digital environment博士论文 Personality and Patterns of Facebook Usage我们展示了用户在Facebook上的活动如何与他们的个性相关，如标准的五因素模型所衡量的。 我们的数据集包括18万用户的个性概况和Facebook个人资料数据。 我们检查了用户的个性和Facebook个人资料的属性之间的相关性，例如他们的友谊网络的大小和密度，上传的照片的数量，参加的事件的数量，组成员的数量以及用户的次数 在照片中标记。 我们的研究结果显示人格特征与脸谱的各种特征之间存在显着的关系。 然后，我们将展示多元回归是如何根据他们的Facebook个人资料预测个体用户的人格特征的。 这种预测的最好的准确性是外向性和神经性的，对于宜人性来说，准确性最低，开放性和责任感处于中间。 Neil Zhenqiang Gong (ECE Department, Iowa State University)You are Who You Know and How You Behave: Attribute Inference Attacks via Users’ Social Friends and Behaviors我们提出新的隐私攻击来推断在线社交网络用户的属性（例如位置，职业和兴趣）。我们的攻击利用在线社会网络中看似无害的用户信息来推断目标用户的缺失属性。鉴于在线用户信息越来越多，我们的结果对于互联网隐私具有严重的影响 - 除非我们采取措施保护用户免受此类推理攻击，否则私有属性可以从用户的公开可用数据中获得。为了推断目标用户的属性，攻击利用用户公开可用的社交朋友或用户的行为记录（例如，用户在Facebook上喜欢的网页，用户在Google Play上查看的应用），但不是两者。正如我们将要显示的，这样的推理攻击实现有限的成功率。但是，如果我们考虑到社交朋友和行为记录，这个问题就会变得非常不同。为了应对这一挑战，我们开发了一种新型的模式来整合社交朋友和行为记录，并基于我们的模型设计新的攻击。我们从理论上和实验上证明了我们攻击的有效性。例如，我们观察到，在一个拥有110万用户的现实世界的大规模数据集中，我们的攻击可以正确推断57％的用户居住在城市中。通过置信度估计，如果攻击者有选择性地攻击一半用户，我们可以将攻击成功率提高到90％以上。而且，我们显示我们的攻击可以正确地推断显着的属性 AttriInfer: Inferring User Attributes in Online Social Networks Using Markov Random Fields在属性推理问题中，我们的目标是利用在线社交网络中的公共数据来推断用户的私有属性（例如位置，性取向和兴趣）。最先进的方法利用用户的公共朋友和公共行为（例如Facebook上的页面喜好，用户在GooglePlay上查看的应用）来推断用户的私有属性。但是，这些方法存在两个关键的局限性：1）假设我们旨在使用训练数据集来推断目标用户的某个属性，他们只利用具有该属性的标签用户，而忽略用户的标签信息没有这个属性; 2）他们是低效率的，因为他们一一推断目标用户的属性。因此，它们在现实世界的社交网络中的准确性和适用性有限。在这项工作中，我们提出了一种推断用户的新方法AttriInfer在线社交网络中的属性。 AttriInfer可以利用朋友和行为，以及具有属性和没有属性的培训用户的标签信息。具体而言，我们将社交网络建模为成对的马尔可夫随机场（pMRF）。给定一个训练数据集，该训练数据集由一些具有一定属性的用户和一些没有一定属性的用户组成，计算目标用户具有属性的后验概率，并使用后验概率推断属性。在AttriInfer的基本版本中，我们使用Loopy Belief Propagation（LBP）来计算后验概率。但是，LBP不能扩展到非常大规模的现实社交网络，并且不能保证收敛。因此，我们进一步优化了LBP的可扩展性，保证了收敛。我们评估了我们的方法，并将其与使用具有5.7M用户的真实世界的Google+数据集的最新方法进行比较。我们的研究结果表明，我们的方法在准确性和效率两方面都大大超过了最先进的方法。 吕琳媛Toward link predictability of complex networks真实网络的组织通常既包含规则又包含不规则性，原则上可以对前者进行建模。网络形成的程度可以说明与我们预测缺失链接的能力相一致。要了解网络组织，我们应该能够估计链路可预测性。我们假设网络的规律性反映在随机移除一小部分链接之前和之后的结构特征的一致性。基于邻接矩阵的扰动，我们提出了一个没有网络组织先验知识的通用结构一致性指标。在完全不同的现实世界网络上进行的大量实验表明：（i）结构一致性是对链路可预测性的一个很好的估计;（ii）一个导数算法在精度和鲁棒性方面优于现有技术的链路预测方法。这种分析在评估链路预测算法和监测不断变化的网络机制中的突然变化方面还有进一步的应用。它将为上述学术研究领域提供独特的基本见解，并将促进信息技术从业人员感兴趣的高级信息过滤技术的发展。 You Are Where You Go: Inferring Demographic Attributes from Location Check-ins用户分析对许多在线服务至关重要。最近的一些研究表明，人口统计特征可以通过不同的在线行为数据来预测，比如用户在Facebook上的“喜欢”，友谊关系，以及推特的语言特征。但是，作为用户离线和在线生活的桥梁，位置登记在推断用户配置文件方面一直被忽视。在本文中，我们调查了用于推断用户人口统计的位置检查的预测能力，并提出了简单而一般的位置分析（L2P）框架。更具体地说，我们从空间性，时间性和位置知识的角度，提取用户登记的丰富语义，其中位置知识丰富了来自异构域（包括在线客户评论网站和社交网络）的语义。另外，张量因子分解被用来提取考虑到上述因素的用户固有签入偏好的低维表示。同时，所提取的特征被用来训练用于推断各种人口统计属性的预测模型。我们收集了一个由159,530个字符组成的大型数据集，ified用户来自在线社交网络。基于这个数据集的广泛的实验结果证实：1）定位检查是各种人口统计学属性的诊断表示，例如性别，年龄，教育背景和婚姻状况; 2）所提出的框架在精度，召回率，F-measure和AUC等各种评估指标方面明显优于比较推断模型","categories":[],"tags":[{"name":"隐私挖掘","slug":"隐私挖掘","permalink":"http://xiangyuwei.github.io/tags/隐私挖掘/"}]},{"title":"李宏毅机器学习课程笔记","slug":"李宏毅课程笔记","date":"2018-01-23T14:45:48.857Z","updated":"2017-12-09T08:52:24.000Z","comments":true,"path":"2018/01/23/李宏毅课程笔记/","link":"","permalink":"http://xiangyuwei.github.io/2018/01/23/李宏毅课程笔记/","excerpt":"","text":"回归梯度下降法梯度下降法主要理论依据是拉格朗日 错误来源误差来源于变量（varias）和偏差(bias)，变量大分布就大，偏差大离中心点就远，模型越复杂，偏差可能越小，变量越大，分布离散。 好的模型是要权衡变量与偏差的关系。 分类应用：金融，医疗诊断，人脸识别 回归会惩罚大的值的点","categories":[{"name":"教程笔记","slug":"教程笔记","permalink":"http://xiangyuwei.github.io/categories/教程笔记/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://xiangyuwei.github.io/tags/笔记/"},{"name":"机器学习","slug":"机器学习","permalink":"http://xiangyuwei.github.io/tags/机器学习/"}]},{"title":"奇思妙想","slug":"奇思妙想","date":"2018-01-23T14:45:48.847Z","updated":"2018-01-02T09:22:07.000Z","comments":true,"path":"2018/01/23/奇思妙想/","link":"","permalink":"http://xiangyuwei.github.io/2018/01/23/奇思妙想/","excerpt":"","text":"1.消息记录的发送时间，间隔所反映的心理活动2.Attention在语义蕴涵 (Entailment) 中的应用 给定一个用英文描述的前提和假设作为输入，输出假设与前提是否矛盾、是否相关或者是否成立 作者：新智元链接：http://xueqiu.com/3426965578/88317304来源：雪球著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。前提：在一个婚礼派对上拍照 假设：有人结婚了 该例子中的假设是成立的","categories":[],"tags":[]},{"title":"一九二九不出手","slug":"冬至","date":"2018-01-23T14:45:48.823Z","updated":"2018-01-05T08:46:25.000Z","comments":true,"path":"2018/01/23/冬至/","link":"","permalink":"http://xiangyuwei.github.io/2018/01/23/冬至/","excerpt":"","text":"市气象专家说，冬至以后，北半球夜晚逐渐缩短，白天逐渐增长。冬至的到来，最重要的气象意义就是数九寒天的开始，也就是说一年中最冷的一段时间要来了。冬至也是一九的第一天，这是我国古代对寒冬的记时方法。我国民间将冬至后的 81 天划分为 9 个阶段，每一个阶段为 9 天。数九寒天历时近3个月，时间是很长的，从开始数九到九九，正是一个由冬寒到春暖的渐变过程。另外，我国民间有“冷在三九”的说法，这是因为“三九四九”前后，地面积蓄的热量最少，天气也最冷。因此，《九九歌》说“一九二九不出手 ，三九四九冰上走”。 河大文学院教授李国平说，冬至是我国农历中一个非常重要的节气，也是一个传统节日，至今不少地方仍有过冬至节的习俗。冬至俗称“冬节”“长至节”“亚岁”等。早在2500多年前的春秋时代，我国已经通过观测太阳测定出了冬至，它是二十四节气中最早制定的一个，时间在每年的阳历12月22日或者23日之间。我国古代对冬至很重视，冬至被当作一个较大节日，曾有“冬至大如年”的说法，而且有庆贺冬至的习俗。《汉书》中说：“冬至阳气起，君道长，故贺。”就是说过了冬至，白昼一天比一天长，阳气回升，是一个节气循环的开始，也是一个吉日，应该庆贺。就这个层面来讲，英国诗人雪莱的名句“冬天到了，春天还会远吗”与“冬至阳来复”倒有异曲同工之妙。 市民李昆顶说，小时候饺子在老家通许县被称作“扁食”，如果冬至这天不吃“扁食”，就有可能被冻掉耳朵。相传这是一个关于医圣张仲景的故事，说是张仲景告老还乡回到南阳老家时，见到很多穷苦百姓忍饥受寒，耳朵都被冻烂了，就研制了一个可以御寒的食疗方子“祛寒娇耳汤”，用羊肉和一些祛寒药材在锅里煮熬，煮好后再把这些东西捞出来切碎，用面皮包成耳朵状的“娇耳”，吃一段时间后，患者的烂耳朵就好了。后来，人们称这种食物为“饺耳”“饺子”或“扁食”，在冬至和大年初一吃，以纪念张仲景治愈病人。 冬至后，阳气缓缓回升，是阴阳转化的关键节气，也是夏病冬防、冬病冬治的最好时机。俗谚说：“今年冬令进补，明年三春打虎。”中医大夫娄琪认为，这个时节要多吃能增加热能供给，富含脂肪、蛋白质和碳水化合物的食物，包括肉类、蛋类、鱼类及豆制品等。要补充矿物质。中国人一般以“五谷为养、五果为助、五畜为益、五菜为充”，只要不偏食，就可以保证人体对钾、铁、钠等矿物质的需求。特别怕冷的人可多补充一些根部带皮的蔬菜，这类蔬菜生长在土壤里，其根部和皮壳中含有大量的矿物质及营养素。冬季气候干燥，人们常有鼻干舌燥、皮肤干裂等症状，补充维生素B2和维生素C十分必要。维生素B2多存于动物的肝、蛋、乳中，维生素C主要存在于新鲜蔬菜和水果中。 在寒冷的冬至时节，受新陈代谢加快影响，人会胃口大开，吃下更多的食物。这个时候要想保持良好身材，运动是很有必要的。国家级健身教练陈启亮说，此时的运动要遵循两个原则：一是选择适当的运动方式，避免大汗淋漓的高强度运动，以强度适中的运动为主，让身体发热或微微出汗即可。二是选择恰当的运动时间，时间自由度大的锻炼者可将晨练安排在7时至9时，时间紧张的上班族则可在6时至7时进行适度锻炼。","categories":[],"tags":[]},{"title":"深度学习对抗攻击","slug":"对抗样本论文集","date":"2017-12-04T14:40:17.690Z","updated":"2017-12-04T07:07:38.000Z","comments":true,"path":"2017/12/04/对抗样本论文集/","link":"","permalink":"http://xiangyuwei.github.io/2017/12/04/对抗样本论文集/","excerpt":"深度学习１、2014-ｅxlaining and Harnessing Adversarial Examples（对抗样本的解释和利用）”[ArXiv][code][code]","text":"深度学习１、2014-ｅxlaining and Harnessing Adversarial Examples（对抗样本的解释和利用）”[ArXiv][code][code] 提出对抗样本不是因为非线性，而是因为模型在高维空间中的线性性。FSM 方法是计算关于x的导数，然后ｓｉｇｎ函数取值进行扰动,在$$ L{无穷} $$距离度量下。$$ X^{adv}＝Ｘ＋ \\varepsilon \\cdot sign (\\bigtriangledown \\ J(X,y{true})) $$梯度可以通过反向传播算法（backpropagation）计算获得。 ２、2015-DeepFool: a simple and accurate method to fool deep neural networks [ArXiv][code]基于$L_2$距离度量的非目标攻击$min ||D(x)-X||2subject\\ to\\ argmaxf(D(X) \\neq\\ y{true})$ ３、2015-The Limitations of Deep Learning in Adversarial Settings[ArXiv][code]通过计算对抗显著图，寻找对输出影响最大的两个输入，每次迭代修改两个像素点，直到达到目标图像。L0 distance metric ４、2015-Distributional Smoothing with Virtual Adversarial Training [ArXiv][code]KL散度 ５、2016-Exploring the space of adversarial images[ArXiv][code]-lua６、2016-Adversarial Machine Learning at Scale[ArXiv][code]９、2016-Adversarial examples in the physical world [ArXiv][code][code]通过对对抗样本拍照片，改变了某些像素来测试对抗样本的有效性拓展FGSM,多次应用，每次一小步,中间结果被$\\varepsilon$截断$X0^{adv}=X \\X{N+1}^{adv}=Clip{X,\\varepsilon}{X{N}^{adv}+\\alpha\\cdot sign (\\bigtriangledown J(X,y_{true}))}$ 10、2016-Simple Black-Box Adversarial Perturbations for Deep Networks[ArXiv]数据集：CIFAR10, MNIST, SVHN, STL10, and ImageNet1000 datasets 11、2017-Towards Evaluating the Robustness of Neural Networks[ArXiv][code][code]It is noteworthy that the original defensive distillation is broken by Carlini and Wagner’s attack$min ||1/2(tanh(W)+1)-x)||^2_2+c\\cdot l(1/2(tanh(W)+1))$ 12、2017-Fast Feature Fool: A data independent approach to universal adversarial perturbations[ArXiv][code]13、2017-Towards Deep Learning Models Resistant to Adversarial Attacks[ArXiv][code]14、2017-Ensemble Adversarial Training: Attacks and Defenses[ArXiv][code]15、S. Zagoruyko. Are deep learning algorithms easily hackable?[code]16、2015-Deep neural networks are easily fooled: High confidence predictions for unrecognizable images[ArXiv]16、2016-Transferability in Machine Learning: from Phenomena to Black-Box Attacks using Adversarial Samples[ArXiv]17、2013-Intriguing properties of neural networkss[ArXiv]通过在$Ｌ_２$距离度量下Ｌ—BFGS解决优化问题来生成对抗样本。 $min\\ c|r|+loss_f(x+r,l)\\ s.t\\ x+r \\subset[0,1]^m$ L-BFGS attack and DeepFool attacks have been implemented in the Foolbox[code] 2017-Robust Physical-World Attacks on Deep Learning Models Evasion attacks against machine learning at test time adversary goal（攻击目标）: 分为两种目标，一是能够分类为好的即可（在垃圾邮件检测中，指分类为好的邮件）。如果有一个函数g定义在样本空间中X，g(x)&lt;0表示分类为好，那么敌人的目标就是设计一个样本x，让g(x)&lt;0。这种攻击很容易破解，只要调整分类界限即可（这里指g(x)=0这条边界）。所以，其实攻击者还有一个更好的目标是让g(x)尽可能小 Universal adversarial perturbations[ArXiv][code]黑盒攻击2017-10-WHITENING BLACK-BOX NEURAL NETWORKS[ArXiv]窃取隐私数据然后进行白盒攻击 ７、2016-Delving into Transferable Adversarial Examples and Black-box Attacks [ArXiv][code]作者还使用了同样的实验方法测试了定向性对抗性攻击在目标模型的效果。结果表明定向类标记的传递性差了很多，只有小于等于4%的对抗性图像在源、目标机器学习模型中都识别出相同的定向标记。基于此，作者提出了ensemble方法。它是以多个深度神经网络模型为基础构造对抗图片，即将图4中单个已知机器学习模型替换成多个不同的已知机器学习模型，并共同产生一个对抗性图像。在实验设计中，作者对5个不同的深度神经网络模型一一实施了黑盒子攻击。在对每一个模型攻击的时候，作者假设已知其余的4个模型，并用集合的方式作白盒子对抗图形的构造。同样的，作者分别使用基于优化的攻击手段，和基于Fast Gradient的手段构造对抗性图片。构造图片依然使用的是Adam优化器。在算法经过100次的迭代对权重向量的更新，loss function得以汇聚。作者发现有许多攻击者预先设定的标记也得到了传递。详细结果参见表2。格子(i,j)代表用除了模型i之外的4个其他算法生成的对抗图片，用模型j来验证得到的定向标记的准确值。可以看出，当目标模型包含在已知模型集合中，定向类标记的传递性都在60%以上。即使目标模型不在已知模型集合中，定向标记的准确值也在30%以上。 ８、2016-Practical Black-Box Attacks against Machine Learning[ArXiv][code]敌手不需要知道目标模型的结构和参数，只能够根据输入得到输出。由于对抗样本的迁移性，可以先构建替代模型训练对抗样本再在目标模型上测试生成的对抗样本。替代模型的结构和目标模型结构要能够处理相同的任务。 Machine Learning as an Adversarial Service:Learning Black-Box Adversarial Examples一种直接攻击目标黑盒神经网络的方法MNIST数据集，CIFAR-10图片数据集应用在物理世界中的目的模型——Amazon Machine Learning Prediction Universal adversarial perturbationsGenerating Adversarial Malware Examples for Black-Box Attacks Based on GAN利用生成对抗网络原理生成对抗样本的方法文中称之为MalGAN。其中，GAN 网络中的判别器是一个人为构建的替代探测器网络。生成器则是目的网络，能生成恶意软件对抗样本。 隐私问题1、Hacking Smart Machines with Smarter Ones : How to Extract Meaningful Data from Machine Learning Classifiers[ArXiv]２、Membership Inference Attacks Against Machine Learning Models[ArXiv]3、Stealing machine learning models via prediction apis4、An end-to-end case study of personal- ized warfarin dosingOn the Protection of Private Information in Machine Learning Systems:Two Recent Approaches其他机器学习技术1、Vulnerability of Deep Reinforcement Learning to Policy Induction Attacks[ArXiv]2、Tactics of Adversarial Attack on Deep Reinforcement Learning Agents[ArXiv]3、Adversarial examples for generative models[ArXiv]4、Adversarial Attacks on Neural Network Policies防御技术1、2016-Distillation as a Defense to Adversarial Perturbations Against Deep Neural Networks[ArXiv]机器学习1、2006-Can machine learning be secure?[paper]2、2011-Adversarial machine learning3、Take two software updates and see me in the morning: The Case for Software Security Evaluations of Medical Devices [paper]4、Adversarial AI5、2017-机器学习安全性问题及其防御技术研究综述6、Concrete Problems in AI Safety[ArXiv]7、Towards the Science of Security and Privacy in Machine Learning[ArXiv]8、Stealing Machine Learning Models via Prediction APIs[paper][code]GAN和对抗样本1、2017-APE-GAN : Adversarial Perturbation Elimination with GAN[ArXiv][code]数据集：including MNIST, CIFAR10 and ImageNet 生成网络将对抗样本还原为真实图片 2、2017-Generative Adversarial Trainer : Defense to Adversarial Perturbations with GAN[ArXiv]增强判别器的识别能力 ３、2017-Generating Adversarial Malware Examples for Black-Box Attacks Based on GAN[ArXiv]GAN也可以产生针对恶意 软件分类器的对抗样本在提取的恶意软件特征上增加噪声使分类器误分类。 ４、2017-Adversarial examples for generative models[ArXiv]5、Generative Poisoning Attack Method Against Neural Networks[ArXiv]提出了 一种更有效的产生对抗样本的方法，它采用生成对 抗网络（GAN）中生成模型（Generative Model）和 判别模型（Discriminative model）的思想，即先用生成模型产生候选的对抗样本，再用判别模型进行 筛选最优对抗样本。 博士论文ON THE INTEGRITY OF DEEP LEARNING SYSTEMS IN ADVERSARIAL SETTINGSSegmentation &amp; Object DetectionAdversarial Examples for Semantic Segmentation and Object Detection Visual Question Answering (VQA）Can you fool AI with adversarial examples on a visual Turing test? 应用场景１．Accessorize to a crime: Real and stealthy attacks on state-of-the-art face recognition２．Robust Physical-World Attacks on Machine Learning Models 软件及应用1.AdversariaLib (includes implementation of evasion attacks from .2.AdLib. A python library with a scikit-style interface which includes implementations of a number of published evasion attacks and defenses.3.AlfaSVMLib. Adversarial Label Flip Attacks against Support Vector Machines.4.Poisoning Attacks against Support Vector Machines, and Attacks against Clustering Algorithms5.deep-pwning Metasploit for deep learning which currently has attacks on deep neural networks using Tensorflow6.Cleverhans is a great TensorFlow-based library for adversarial attacks and defences: https://github.com/tensorflow/cleverhans7.FoolBox – another collection of attacks that you can use with a framework of your preferencehttps://foolbox.readthedocs.io/en/latest/8.EvadeML - Machine Learning in the Presence of Adversaries9.Adversarial Machine Learning - PRA Lab","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/categories/深度学习/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"Ubuntu 系统软件安装","slug":"Ubuntu 系统软件安装","date":"2017-12-04T14:40:17.674Z","updated":"2017-12-25T13:45:57.000Z","comments":true,"path":"2017/12/04/Ubuntu 系统软件安装/","link":"","permalink":"http://xiangyuwei.github.io/2017/12/04/Ubuntu 系统软件安装/","excerpt":"注意安装要在安装包目录下。 安装eclipse+pydev教程 安装ss参考github上内容下载shadowsock 123sudo add-apt-repository ppa:hzwhuang/ss-qt5sudo apt-get updatesudo apt-get install shadowsocks-qt5","text":"注意安装要在安装包目录下。 安装eclipse+pydev教程 安装ss参考github上内容下载shadowsock 123sudo add-apt-repository ppa:hzwhuang/ss-qt5sudo apt-get updatesudo apt-get install shadowsocks-qt5 ssh 连接远程服务器用户user的home目录：/home/user的权限变成了777，造成不能正常登陆SSH，报如下错误：Permission denied (publickey,gssapi-with-mic SSH对公钥、私钥的权限和所有权的要求是非常严格的，总结如下： 1、下面两个目录的所有权必须是user，所属组也应该是user，权限必须为700 \\home\\user \\home\\user.ssh 2、下面公钥文件的所有权必须是user，所属组也应该是user，权限必须为644 \\home\\user.ssh\\authorized_keys 3、下面私钥文件的所有权必须是user，所属组也应该是user，权限必须是600 \\home\\user.ssh\\id_rsa 将ssh公钥加入本地ssh环境中1ssh-add ~./ssh/wenjianming 改变公钥文件权限1chmod 700 wenjianming cmd markdown1.去官网下载＂cmd_markdown_linux64.tar.gz＂并解压;2.运行 tar -xvf cmd_markdown_linux64.tar.gz3.双击Cmd Markdown，或在终端运行./Cmd\\ Markdown即可打开界面 gdebi可免于安装各种依赖，1sudo apt-get install gdebi 百度云下载开发者主页下载Bcloud 安装微信在网上先去下载electronic-wechat-Linux https://github.com/geeeeeeeeek/electronic-wechat/releases双击打开解压后的文件夹，找到electronic-wechat这个文件，双击运行或者右键选择运行 安装qq参考博客Wine QQ 1 http://www.ubuntukylin.com/application/show.php?lang=cn&amp;id=279 百度云下载地址： 1 http://pan.baidu.com/s/1hr5Z4I4 安装说明： 下载后解压，在解压后文件夹下输入如下命令： [objc] view plain copyprint? sudo dpkg -i fonts-wqy-microhei_0.2.0-beta-2_all.deb sudo dpkg -i ttf-wqy-microhei_0.2.0-beta-2_all.deb sudo dpkg -i wine-qqintl_0.1.3-2_i386.deb 如果，最后一步报错。使用如下命令修复： sudo apt-get -f install sudo dpkg -i wine-qqintl_0.1.3-2_i386.deb 安装完成，就可以使用了。 安装flash进入保存Adobe Flash Player压缩包的路径，将压缩包解压， 首先我们执行先命令：cd 下载，进入文件下载的目录，然后在执行命令：tar -zxvf install_flash_player_11_linux.x86_64.tar.gzsudo cp libflashplayer.so /usr/lib/firefox/browser/plugins 拷贝完之后再将“usr”目录下所有文件拷到/usr下，执行命令： sudo cp -r usr/* /usr 网易云音乐网易云音乐下载地址 http://music.163.com/#/download 安装anaconda+tersorflow1.首先安装Anaconda 下载Linux对应的anaconda版本，下载到你的路径 ： PATH2.安装anaconda， 打开终端bash PATH/Anaconda3-4.0.0-linux-x86_64.sh 安装在其余路径的，请根据下面网站提示更改路径表 https://docs.continuum.io/anaconda/install 添加环境变量1234gedit ~/.bashrc#added by import PATH=&quot;/home/XXX/bin:$PATH&quot;soure ~/.bashrc 在终端或cmd中输入以下命令搜索当前可用的tensorflow版本 $ anaconda search -t conda tensorflow选择一个较新的CPU或GPU版本，如jjh_cio_testing/tensorflow-gpu的1.0.1版本，输入如下命令查询安装命令 $ anaconda show jjh_cio_testing/tensorflow-gpu 使用最后一行的提示命令进行安装 $ conda install –channel https://conda.anaconda.org/jjh_cio_testing tensorflow-gpu进入python，输入 import tensorflow as tf 如果没有报错说明安装成功。装完成后，使用如下命令生成一个名为tensorflow的conda环境，根据python版本选择正确的命令执行即可 Python 2.7$ conda create -n TensorFlow python=2.7 Python 3.4$ conda create -n TensorFlow python=3.4 Python 3.5$ conda create -n TensorFlow python=3.5使用如下命令进入TensorFlow环境：source activate tensorflow 在tensorflow下安装jupyter notebook 查看TensorFlow的版本： import tensorflow as tftf.version‘0.11.0rc2’ 查看TensorFlow安装路径： tf.path[‘/usr/local/ml/anaconda2/envs/tensorflow/lib/python2.7/site-packages/tensorflow’] 更新tensorflow pip install –upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp27-none-linux_x86_64.whlpip install –upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.1.0-cp27-none-linux_x86_64.whl安装theano和keras 在python 3.5中，安装keras之前要安装theano。 activate tensorflowconda install mingw libpythonconda install theanopip install keras 安装google浏览器安装pycharm下载、然后到/bin下 ./pycharm.sh 即可激活时使用服务器网址： http://idea.imsxm.com/ 小知识~代表你的/home/用户明目录假设你的用户名是x，那么~/就是/home/x/.是代表此目录本身，但是一般可以不写所以cd ~/. 和cd ~ 和cd ~/效果是一样的但是.后面有东西又是另外一个问题，点在文件名头部，代表一个隐藏文件~/.local是你的主目录下一个.local的文件夹的路径，并且从.可以看出，这是一个饮藏文件，如果不用ls -a的话，一般ls是无法看到的apt:adobe-flashplugin?channel=$distro-partner 安装ｓｓｈ &gt;sudo apt-get update #更新一部分东西sudo apt-get install openssh-server #安装ssh，中间选择ysudo ps -e |grep ssh #如果有sshd说明ssh服务已经启动，如果没有，输入sudo service ssh start启动sudo gedit /etc/ssh/sshd_config #配置文件sudo apt-get install putty #安装putty 从本地上传文件到服务器 从服务器下载文件到本地 在终端输入 “`scp -r 本地文件路径 服务器帐号名@服务器的adress:想要保存的路径 #从本地到服务器scp -r 服务器帐号名@服务器的adress:文件路径 本地保存路径 #从服务器到本地 上述为本地和服务器端口号一致的时候，默认为22 如果不一致，都是在-r之后加入 -P 端口号 即可 修改ｈｏｓｔ首先打开HOST文件 sudo vim /etc/hosts 添加你需要的域名 216.239.37.99 www.google.com 注意不要加上http://这样的协议前缀和/后缀等； 编辑后，你需要重新启动一下你的网络。 sudo /etc/init.d/networking restart 内核升级与更换顺序http://www.360doc.com/content/13/0629/15/12892305_296361964.shtml想把ｗｉｎｄｏｗｓ启动放在前面时调整 /boot/grub/grub.cfg 中启动顺序 换源这个博客比较全.1.在终端中，输入以下命令： sudo wget http://www.linuxidc.com/files/repo/google-chrome.list -P /etc/apt/sources.list.d/ 将下载源加入到系统的源列表2.在终端中，输入以下命令： wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 导入谷歌软件的公钥，用于下面步骤中对下载软件进行验证。 如果顺利的话，命令将返回“OK”3.在终端中，输入以下命令： sudo apt-get update 用于对当前系统的可用更新列表进行更新。这也是许多 Linux 发行版经常需要执行的操作，目的是随时获得最新的软件版本信息。4.在终端中，输入以下命令： sudo apt-get install google-chrome-stable 执行对谷歌 Chrome 浏览器（稳定版）的安装5.最后，如果一切顺利，在终端中执行以下命令： /usr/bin/google-chrome-stable 将会启动谷歌 Chrome 浏览器 阿里云 deb cdrom:[Ubuntu 16.04 LTS Xenial Xerus - Release amd64 (20160420.1)]/ xenial main restricteddeb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb http://mirrors.aliyun.com/ubuntu/ xenial multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-propertiesdeb http://archive.canonical.com/ubuntu xenial partnerdeb-src http://archive.canonical.com/ubuntu xenial partnerdeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial-security universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse 用vi和gedit 打开 /etc/apt/sources.list 将其中的us.archive 全部替换为 cn.archive即可，这样，以后使用apt-get下载就会使用源自http://cn.archive.ubuntu.com 了‘’’vi /etc/apt/sources.list ‘’’ udo cp /etc/apt/sources.list /etc/apt/sources.list_backup而后用gedit或其他编辑器打开: gksu gedit /etc/apt/sources.list kdesudo kate /etc/apt/sources.list gksu mousepad /etc/apt/sources.list gksu leafpad /etc/apt/sources.list (12.04版) gksu gedit /etc/apt/sources.list从下面列表中选择合适的源，替换掉文件中所有的内容，保存编辑好的文件: 注意：一定要选对版本然后，刷新列表:sudo apt-get update 注意：一定要执行刷新 显示所有文件（包含隐藏文件）ls -a 只显示隐藏文件l.或者ls -d .* 复制多个文件 cp /home/user/{1,2,3} /home/usr/des 外接设备在 /media/wxy 目录下件之后带一个星号”*”的含义 表面这个文件是可执行文件 壁纸Wallpaper manager 是一款桌面壁纸软件sudo add-apt-repository ppa:baitsart/wallpaper-managersudo apt-get updatesudo apt-get install wallpaper-manager 或者 http://www.lovebizhi.com/linux.html LaTex安装官网 12345sudo apt-get install texlive-full 配置环境sudoapt-getinstalltexmaker LaTeX 文档需要一个编辑器sudo apt-get install latex-cjk-all 字体包中包含bsmi，bkai，gkai，gbsn四种中文字体。bsmi和bkai是Big5编码的宋体和楷体字；后两者gkai和gbsn分别处理简体中文楷体字和宋体字","categories":[{"name":"Linux","slug":"Linux","permalink":"http://xiangyuwei.github.io/categories/Linux/"}],"tags":[{"name":"软件安装","slug":"软件安装","permalink":"http://xiangyuwei.github.io/tags/软件安装/"},{"name":"ubuntu","slug":"ubuntu","permalink":"http://xiangyuwei.github.io/tags/ubuntu/"}]},{"title":"Ubuntu使用","slug":"Ubuntu使用","date":"2017-12-04T14:40:17.674Z","updated":"2017-12-07T09:53:25.000Z","comments":true,"path":"2017/12/04/Ubuntu使用/","link":"","permalink":"http://xiangyuwei.github.io/2017/12/04/Ubuntu使用/","excerpt":"","text":"CTRL+h 显示隐藏文件ctrl+win +D 显示桌面长按ｗｉｎ 显示快捷键 /usr是Unix Software Rrsources的意思，相当于windows的C盘的，C:\\Windows\\和C:\\Program Files的结合体。 ls /usr可以得到：bin include lib share local 等等。 其中share就是安装后的文件，文件夹所在位置 而local是第三方库的位置，比如我安装了：boost和libtorrent库，就在这里面参考：1","categories":[{"name":"系统","slug":"系统","permalink":"http://xiangyuwei.github.io/categories/系统/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://xiangyuwei.github.io/tags/Ubuntu/"}]},{"title":"linux 命令","slug":"linux命令","date":"2017-12-04T14:40:17.565Z","updated":"2017-12-28T08:00:58.000Z","comments":true,"path":"2017/12/04/linux命令/","link":"","permalink":"http://xiangyuwei.github.io/2017/12/04/linux命令/","excerpt":"后台运行在应用Unix/Linux时，我们一般想让某个程序在后台运行，于是我们将常会用 &amp; 在程序结尾来让程序自动运行。比如我们要运行mysql在后台： /usr/local/mysql/bin/mysqld_safe –user=mysql &amp;。可是有很多程序并不想mysqld一样，这样我们就需要nohup命令，怎样使用nohup命令呢？这里讲解nohup命令的一些用法。","text":"后台运行在应用Unix/Linux时，我们一般想让某个程序在后台运行，于是我们将常会用 &amp; 在程序结尾来让程序自动运行。比如我们要运行mysql在后台： /usr/local/mysql/bin/mysqld_safe –user=mysql &amp;。可是有很多程序并不想mysqld一样，这样我们就需要nohup命令，怎样使用nohup命令呢？这里讲解nohup命令的一些用法。 RC版本百度百科解释发布候选版，主要在于除错 查看文件夹中文件或文件夹的个数内容详细介绍 查看目录下有多少个文件及文件夹需在终端输入搜索 ls | wc -w 查看目录下有多少个文件需在终端输入 ls | wc -c 查看文件夹下有多少个文件，多少个子目录需在终端输入 ls -l |wc -l 若只想知道文件的个数，则需在终端输入 /bin/ls -l |grep ^-|wc -l 修改用户环境~/.bashrcLinux下 环境变量/etc/profile、/etc/bashrc、~/.bashrc的区别中： /etc/profile:该文件登录操作系统时，为每个用户设置环境信息，当用户第一次登录时,该文件被执行。也就是说这个文件对每个shell都有效，用于获取系统的环境信息。 etc/bashrc：为每一个运行bash shell的用户执行此文件，当bash shell被打开时,该文件被读取。也就是说，当用户shell执行了bash时，运行这个文件。 ~/.bashrc该文件存储的是专属于个人bash shell的信息，当登录时以及每次打开一个新的shell时,执行这个文件。在这个文件里可以自定义用户专属的个人信息。在刚登录Linux时，首先启动 /etc/profile 文件，然后再启动用户目录下的 ~/.bash_profile、 ~/.bash_login或 ~/.profile文件中的其中一个，执行的顺序为：~/.bash_profile、 ~/.bash_login、 ~/.profile。如果 ~/.bash_profile文件存在的话，一般还会执行 ~/.bashrc文件 linux下文件的复制、移动与删除文件复制命令cp命令格式：cp [-adfilprsu] 源文件(source) 目标文件(destination) cp [option] source1 source2 source3 ... directory 参数说明： -a:是指archive的意思，也说是指复制所有的目录 -d:若源文件为连接文件(link file)，则复制连接文件属性而非文件本身 -f:强制(force)，若有重复或其它疑问时，不会询问用户，而强制复制 -i:若目标文件(destination)已存在，在覆盖时会先询问是否真的操作 -l:建立硬连接(hard link)的连接文件，而非复制文件本身 -p:与文件的属性一起复制，而非使用默认属性 -r:递归复制，用于目录的复制操作 -s:复制成符号连接文件(symbolic link)，即“快捷方式”文件 -u:若目标文件比源文件旧，更新目标文件 如将/test1目录下的file1复制到/test3目录，并将文件名改为file2,可输入以下命令： cp /test1/file1 /test3/file2 cp {id_rsa.pub*,id_rsa*} /home/wxy/.ssh 文件移动命令mv命令格式：mv [-fiv] source destination 参数说明： -f:force，强制直接移动而不询问 -i:若目标文件(destination)已经存在，就会询问是否覆盖 -u:若目标文件已经存在，且源文件比较新，才会更新 如将/test1目录下的file1复制到/test3 目录，并将文件名改为file2,可输入以下命令： mv /test1/file1 /test3/file2 文件删除命令rm命令格式：rm [fir] 文件或目录 参数说明： -f:强制删除 -i:交互模式，在删除前询问用户是否操作 -r:递归删除，常用在目录的删除 如删除/test目录下的file1文件，可以输入以下命令： rm -i /test/file1 删除文件夹linux删除目录很简单，很多人还是习惯用rmdir，不过一旦目录非空，就陷入深深的苦恼之中，现在使用rm -rf命令即可。直接rm就可以了，不过要加两个参数-rf 即：rm -rf 目录名字-r 就是向下递归，不管有多少级目录，一并删除-f 就是直接强行删除，不作任何提示的意思 使用awk命令获取文本的某一行,某一列du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的来自: http://man.linuxde.net/du 创建文件，文件夹touch testfilemkdir testname1、vi vi 1.txt 会直接创建并打开一个文件1.txt 2、touch touch的作用是更改一个文件或目录的时间。touch 2.txt 如果2.txt不存在，则创建空文件2.txt 3、echo echo “abcd” &gt; 3.txt 可以直接创建文件3.txt并将abcd写入。 4、less 、more 、cat 三者都是将文件内容输出到标准输出，其中less和more可以分页显示，cat是显示全部。 三者可以根据已经存在的文件创建新的文件。假设已经存在文件1.txt。 cat 1.txt &gt; 2.txt less 1.txt &gt; 3.txt more 1.txt &gt; 4.txt 此时创建的文件内容都和1.txt中文件内容相同。 显卡信息查看lspci | grep -i vga如果想看详细的信息，比如 GeForce GT 240，即 02:00.0 [root@localhost conf]# lspci -v -s 02:00.0 如何查看GPU信息1、显示当前GPU使用情况Nvidia自带了一个nvidia-smi的命令行工具，会显示显存使用情况： $ nvidia-smi scp获取远程服务器上的文件 上传文件scp -P 2222 root@www.vpser.net:/root/lnmp0.4.tar.gz /home/lnmp0.4.tar.gz上端口大写P 为参数，2222 表示更改SSH端口后的端口，如果没有更改SSH端口可以不用添加该参数。 root@www.vpser.net 表示使用root用户登录远程服务器www.vpser.net，:/root/lnmp0.4.tar.gz 表示远程服务器上的文件，最后面的/home/lnmp0.4.tar.gz表示保存在本地上的路径和文件名。 上传目录到服务器scp -r local_dir username@servername:remote_dir 查看磁盘信息。/boot空间不足 df -lh dpkg –get-selections|grep linux-image uname -asudo apt-get purge linux-image-3.5.0-27-generic 使用purge卸载3.5.0-27，若使用remove卸载则会有类似3.5.0-17的遗留sudo gdebi teamviewer_12.0.85001_i386.debsudo dpkg -i teamviewer_12.0.85001_i386.deb df fdisk fdisk -l sudo fdisk -l sudo ntfsfix /dev/sda5 http://blog.csdn.net/cloud_xy/article/details/10278769新建备份文件夹：devel@devServer:~$ sudo mkdir /opt/kernel[sudo] password for devel:devel@devServer:~$挑选/boot下体积较大的几个文件备份出来，其中，以vmlinuz、initrd.img开头的文件较大，然后将21~27的内核中以这两个开头的全部备份至刚才新建的文件夹，最后直接删除(sudo rm –f),再查看一下，这回腾出好几十M的空间了，然后再执行之前的那个命令（sudo apt-get -f install），这回顺利更新完毕！然后再去尝试卸载那些旧的内核，所有的都能正常卸载了！ nohup(no hang up)nohup python -u test.py &gt; out.log &amp;无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中ohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。 查看守护进程ps -ef | grep xxxlinux进程查看系统进程信息命令主要分为：静态进程查看命令（ps）、动态进程查看命令（top）和查看进程树命令(pstree)http://blog.csdn.net/longerzone/article/details/8015941一、静态进程查看 ps ps命令格式： ps -aux 查看系统所有进程 ps -lA 查看所有系统的数据 ps axjf 连通部分进程树状态 -A：与-e意思一样，表列出所有进程 -a ：不与terminal有关的进程 -u：有效用户相关的进程 x：通常与a这个参数一起用，可以列出完整信息 输出格式： l：较仔细列出该pid信息 j：工作格式 -f：做一个更为完整的输出 pts是所谓的伪终端或虚拟终端，具体表现就是你打开一个终端，这个终端就叫pts/0，如果你再打开一个终端，这个新的终端就叫pts /1。比如用who命令查询当前登录的用户，可以看到每个用户的TTY设备（简单来说就是用户输入命令还有显示信息的设备，比如终端）有一个tty7是表示图形界面，我当前登录的是GNOME，当然就是图形界面了。还有tty1-tty6表示文字界面，可以用Ctrl+Alt+F1-F6切换，+F7就是切换回图形界面。下面两行说明我当前打开了两个终端窗口，所以就有pts/0和pts/1tmux是指通过一个终端登录远程主机并运行后，在其中可以开启多个控制台的终端复用软件tty是Teletype的缩写 伪终端（Pseudo Terminal）如果你发现某个进程的CMD后面接上时，就代表该进程是僵尸进程，例如： 1 2598 2598 2598 ? -1 Ss 0 0:00 /usr/sbin/hcid 后台进程后台进程退出是由于登陆shell收到了SIGHUP信号后在退出前将SIGHUP转发给所有的作业(jobs)。jobs由于收到SIGHUP而终止运行。http://doc.okbase.net/leehomjan/archive/107550.htmlhttp://www.cnblogs.com/xianlai-huang/p/6543751.html dpkg：处理 smbclient (–configure)时出错： 依赖关系问题 - 仍未被配置因为错误消息指示这是由于上一个问题导致的错误，没有写入 apport 报告。 由于已经达到 MaxReports 限制，没有写入 apport 报告。 在处理时有错误发生： nfs-common samba-common samba smbclientE: Sub-process /usr/bin/dpkg returned an error code (1) 虽然出错，但是装的软件还是可以用的，这里好象是由于当时安装samba服务器的时候没有安装好，在网上有一篇文章: http://hi.baidu.com/dream__land/blog/item/46dfe6fded06880109244d18.html 1.$ sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old //现将info文件夹更名2.$ sudo mkdir /var/lib/dpkg/info //再新建一个新的info文件夹3.$ sudo apt-get update, apt-get -f install //不用解释了吧4.$ sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old //执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info_old文件夹下5.$ sudo rm -rf /var/lib/dpkg/info //把自己新建的info文件夹删掉6.$ sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info //把以前的info文件夹重新改回名字 重复执行历史命令history 查看历史命令 例如：！255 查看文件大小file ##.pngidentify ##.jpg 密钥环密钥环是存放保存密码的地方，以明文的方式，需要装系统时设置的密钥进行解锁忘记登录密钥，在启动界面，进入高级选项，修复模式，ｒｏｏｔ下修改密码，passwd XXX 然后reboot参考官方文档 seahorse 进入密钥环 bash快捷键ctrl键组合ctrl+a:光标移到行首。ctrl+b:光标左移一个字母ctrl+c:杀死当前进程。ctrl+d:退出当前 Shell。ctrl+e:光标移到行尾。ctrl+h:删除光标前一个字符，同 backspace 键相同。ctrl+k:清除光标后至行尾的内容。ctrl+l:清屏，相当于clear。ctrl+r:搜索之前打过的命令。会有一个提示，根据你输入的关键字进行搜索bash的historyctrl+u: 清除光标前至行首间的所有内容。ctrl+w: 移除光标前的一个单词ctrl+t: 交换光标位置前的两个字符ctrl+y: 粘贴或者恢复上次的删除ctrl+d: 删除光标所在字母;注意和backspace以及ctrl+h的区别，这2个是删除光标前的字符ctrl+f: 光标右移ctrl+z : 把当前进程转到后台运行，使用’ fg ‘命令恢复。比如top -d1 然后ctrl+z ，到后台，然后fg,重新恢复esc组合esc+d: 删除光标后的一个词esc+f: 往右跳一个词esc+b: 往左跳一个词esc+t: 交换光标位置前的两个单词。 压缩文件压缩服务器上当前目录的内容为xxx.zip文件 zip -r xxx.zip ./* 解压zip文件到当前目录 unzip filename.zipzip -r filename.zip filesdir 在这个例子里，filename.zip 代表你创建的文件，filesdir 代表你想放置新 zip 文件的目录。-r 选项指定你想递归地（recursively）包括所有包括在 filesdir 目录中的文件。 tar 命令详解 -c: 建立压缩档案 -x：解压 -t：查看内容 -r：向压缩归档文件末尾追加文件 -u：更新原压缩包中的文件 这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。 -c: 建立压缩档案 -x：解压 -t：查看内容 -r：向压缩归档文件末尾追加文件 -u：更新原压缩包中的文件 下面的参数-f是必须的 -f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。主选项： c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。 r 把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。 t 列出档案文件的内容，查看已经备份了哪些文件。 u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。 x 从档案文件中释放文件。 辅助选项： b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20(20*512 bytes)。 f 使用档案文件或设备，这个选项通常是必选的。 k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。 m 在还原文件时，把所有文件的修改时间设定为现在。 M 创建多卷的档案文件，以便在几个磁盘中存放。 v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。 w 每一步都要求确认。 z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。 # tar -cf all.tar *.jpg 这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文","categories":[{"name":"Linux","slug":"Linux","permalink":"http://xiangyuwei.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://xiangyuwei.github.io/tags/Linux/"},{"name":"命令","slug":"命令","permalink":"http://xiangyuwei.github.io/tags/命令/"}]},{"title":"test","slug":"test","date":"2017-12-02T14:52:36.321Z","updated":"2017-12-03T09:14:25.437Z","comments":true,"path":"2017/12/02/test/","link":"","permalink":"http://xiangyuwei.github.io/2017/12/02/test/","excerpt":"","text":"$$ \\frac $$ $$\\begin{eqnarray}\\nabla\\cdot\\vec{E} &amp;=&amp; \\frac{\\rho}{\\epsilon_0} \\\\\\nabla\\cdot\\vec{B} &amp;=&amp; 0 \\\\\\nabla\\times\\vec{E} &amp;=&amp; -\\frac{\\partial B}{\\partial t} \\\\\\nabla\\times\\vec{B} &amp;=&amp; \\mu_0\\left(\\vec{J}+\\epsilon_0\\frac{\\partial E}{\\partial t} \\right)\\end{eqnarray}$$","categories":[],"tags":[]},{"title":"识别系统前期调研","slug":"识别系统前期调研","date":"2017-11-25T10:04:18.266Z","updated":"2017-12-03T09:26:55.915Z","comments":true,"path":"2017/11/25/识别系统前期调研/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/25/识别系统前期调研/","excerpt":"三星S8—虹膜识别 ①首先需要可以捕捉红外光的相机（目前市场已经没有） ② 然后对机主的虹膜进行高分辨捕捉 ③ 偷取他的手机 ④ 再用特殊的打印方式打印出来","text":"三星S8—虹膜识别 ①首先需要可以捕捉红外光的相机（目前市场已经没有） ② 然后对机主的虹膜进行高分辨捕捉 ③ 偷取他的手机 ④ 再用特殊的打印方式打印出来 iphone X—人脸识别苹果在Face ID的人脸识别中加入了深度信息的技术。 Face ID的实现靠的是iPhone X顶部一小块没被屏幕覆盖的区域。这一小块区域集成了多达八个组件，除了麦克风、扬声器、前置摄像头、环境光传感器、距离感应器等我们熟知的部分，还集成了红外镜头、泛光感应元件（Flood illuminator）、点阵投影器。 深度信息技术在Face ID的认证过程中分为以下两个步骤① 在注册时，点阵投影仪会投射3万多个点在人脸上，从而形成一张3D人脸图，并存储在A11芯片上 ② 使用时，泛光感应元件会打一道看不见的光在人的脸上（这样在黑暗中也可以识别人脸），读取用户的脸部3D几何结构图，并将它与存储在A11芯片隔区内的数据进行对比，如果两者一致，iPhone X就会解锁 越南网络安全公司Bkav绕过了首批由华硕、联想、东芝等笔记本电脑部署的面部识别系统，而使用的不过是一张简单的照片 门禁系统支付宝，ＱＱ安全中心人脸改密打卡机人脸（得力，中控）app以及线下互联网领域存在很多提供人脸识别技术的服务商，比如一登、facevisa 研究人员教导人工智能研究社交网络用户的行为，然后设计并实施自己的网络钓鱼诱饵。在测试中，AI 比人类竞争对手强大得多，制造并分发了比人类更多的网络钓鱼微博人工智能可用于挖掘大量公共领域和社交网络数据，以提取出生日期、性别、位置电话号码、邮箱地址等个人身份信息，可用于黑客入侵个人账户它还可以用于自动监控电子邮件和短信，并为社会工程攻击创建个性化的网络钓鱼邮件网络钓鱼诈骗是非法尝试从不知情的用户获取敏感信息。AI 可以更容易地突变恶意软件、更智能地搜索并挖掘和利用系统中的漏洞 ｆａｃｅ＋＋人脸识别语音：ＡＬＥＸＡ 智能设备语音助手公安部旗下NCIIC的人脸比对优图独创Uface深度人脸模型SeetaFace开源人脸识别引擎车牌识别及普通验证码 目标：Deep-pwning是一个轻量级的机器学习模型的实验框架，其目的是评估其对抗动机的强大对手。 请注意，目前状态下的深层次不在接近到期或完成的地方。 这是为了试验，扩展和扩展你。只有这样我们才能真正成为统计机器学习模型的渗透测试工具包。 Visual Question Answering (VQA）Can you fool AI with adversarial examples on a visual Turing test?","categories":[{"name":"机器学习","slug":"机器学习","permalink":"http://xiangyuwei.github.io/categories/机器学习/"}],"tags":[{"name":"人脸识别","slug":"人脸识别","permalink":"http://xiangyuwei.github.io/tags/人脸识别/"}]},{"title":"ON THE INTEGRITY OF DEEP LEARNING SYSTEMS IN ADVERSARIAL SETTINGS","slug":"ON THE INTEGRITY OF DEEP LEARNING SYSTEMS IN ADVERSARIAL SETTINGS","date":"2017-11-19T03:16:28.293Z","updated":"2017-12-03T09:40:15.223Z","comments":true,"path":"2017/11/19/ON THE INTEGRITY OF DEEP LEARNING SYSTEMS IN ADVERSARIAL SETTINGS/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/19/ON THE INTEGRITY OF DEEP LEARNING SYSTEMS IN ADVERSARIAL SETTINGS/","excerpt":"未来工作这个架构可以用于监督学习也可以用于非监督学习，但目前只能用于前馈神经网络，不能用于循环神经网络探索在更多对抗设置中的攻击","text":"未来工作这个架构可以用于监督学习也可以用于非监督学习，但目前只能用于前馈神经网络，不能用于循环神经网络探索在更多对抗设置中的攻击 研究现状攻击测试时间 - 探索性攻击[2] - 不会篡改目标模型，而是要么直接行为不端或者只是简单地使用攻击来收集关于模型特征的证据。这是我们在本手稿的前几章中所描述的攻击类型。 Biggio等人[6]在测试时引入了对二进制分类器（例如用于检测）的攻击，并将恶意样本分类为良性的目标考虑为攻击者。假设对手具有（至少部分）目标分类器的知识。他们将对手的攻击策略制定为一个最小化问题，以找到最接近敌对目标的归类为良性的输入（归类为恶意）。为了帮助处理非线性和潜在的非凸性问题，他们使用了一种启发式方法来支持合法点集合（称为模仿）的密集区域中的攻击点。他们使用单个隐藏层对线性分类器，SVM和低维神经网络进行攻击。同样假设目标分类器的知识，Fogla等人详细描述了一个多态混合攻击来规避网络异常检测系统[24,25]。他们的攻击是基于将入侵检测系统建模为常规语法，并发现该语法所接受的突变攻击实例。生成这样的实例是一个NP完全问题，但作者表明，可以找到接近最优的解决方案，使用减少SAT可满足性问题及其相关的求解器","categories":[{"name":"论文","slug":"论文","permalink":"http://xiangyuwei.github.io/categories/论文/"}],"tags":[{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"Robust Physical-World Attacks on Machine Learning Models","slug":"Robust Physical-World Attacks on Machine Learning Models","date":"2017-11-14T13:01:47.059Z","updated":"2017-12-03T09:42:11.038Z","comments":true,"path":"2017/11/14/Robust Physical-World Attacks on Machine Learning Models/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/14/Robust Physical-World Attacks on Machine Learning Models/","excerpt":"最近的研究中，许多对抗样本构造方法在真实自然世界效果不好。已有的对抗攻击研究在现实世界中，往往不能使分类模型误分类，或者只在非常有限的情况比如复杂原始图像经修改后打印出来才能达到对抗攻击的目的。","text":"最近的研究中，许多对抗样本构造方法在真实自然世界效果不好。已有的对抗攻击研究在现实世界中，往往不能使分类模型误分类，或者只在非常有限的情况比如复杂原始图像经修改后打印出来才能达到对抗攻击的目的。 本论文要点如下： 提出Robust Physical Perturbations(RP2)算法，能产生鲁棒且自然有效的对抗扰动。 使用RP2算法用两种方式构造对抗攻击：– subtle perturbations：对整个标志进行微小的、很难探测到的改动。把整个受到攻击后的图片打印后覆盖到原标志上面，尺寸和原图一样。– camouflage perturbations：以涂鸦或艺术画的形式对原图进行可见的改变。攻击者直接将扰动攻击打印出来，然后贴到已经存在的标志上面。 因为目前缺乏衡量自然界对抗攻击效果的标准方法，因此论文提出了一种评估方法。 数据集：LISA数据集，包含47种不同的路标图片，在本实验中重设尺寸为32×32 https://www.zybuluo.com/wuxin1994/note/839621","categories":[{"name":"论文","slug":"论文","permalink":"http://xiangyuwei.github.io/categories/论文/"}],"tags":[{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"Adversarial Perturbations Against Deep Neural Networks for Malware Classification","slug":"Adversarial Perturbations Against Deep Neural Networks for Malware Classificatio","date":"2017-11-13T03:23:03.383Z","updated":"2017-12-03T09:45:35.387Z","comments":true,"path":"2017/11/13/Adversarial Perturbations Against Deep Neural Networks for Malware Classificatio/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/13/Adversarial Perturbations Against Deep Neural Networks for Malware Classificatio/","excerpt":"摘要在本文中，我们将展示如何构建高效的系统 对抗性样本，用于神经网络的恶意分类器。恶意软件分类的应用领域在对抗l样本加工问题中引入了额外的约束条件，与计算机视觉域相比:(i)连续的、可微的输入域被离散的，通常是二元的输入所取代;(ii)保持视觉外观不变的松弛条件被需要等价的功能行为所取代。我们论证了这些攻击在许多方面的可行性","text":"摘要在本文中，我们将展示如何构建高效的系统 对抗性样本，用于神经网络的恶意分类器。恶意软件分类的应用领域在对抗l样本加工问题中引入了额外的约束条件，与计算机视觉域相比:(i)连续的、可微的输入域被离散的，通常是二元的输入所取代;(ii)保持视觉外观不变的松弛条件被需要等价的功能行为所取代。我们论证了这些攻击在许多方面的可行性 数据集DREBIN数据集 贡献产生对抗攻击的方法借鉴与Papernot提出的方法，并将之从连续可微的空间转移应用到了离散受限的恶意软件探测输入上。自己构建了一个分类器来实现恶意软件探测。探究了潜在的能增强恶意软件分类器鲁棒性的方法，并应用到了实际的模型中","categories":[{"name":"论文","slug":"论文","permalink":"http://xiangyuwei.github.io/categories/论文/"}],"tags":[{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"DELVING INTO TRANSFERABLE ADVERSARIAL EX- AMPLES AND BLACK-BOX ATTACKS","slug":"DELVING INTO TRANSFERABLE ADVERSARIAL EX- AMPLES AND BLACK-BOX ATTACKS","date":"2017-11-12T12:46:11.892Z","updated":"2017-12-03T09:46:42.391Z","comments":true,"path":"2017/11/12/DELVING INTO TRANSFERABLE ADVERSARIAL EX- AMPLES AND BLACK-BOX ATTACKS/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/12/DELVING INTO TRANSFERABLE ADVERSARIAL EX- AMPLES AND BLACK-BOX ATTACKS/","excerpt":"贡献研究目标和非目标攻击，转移性在非目标攻击时更容易发生用已有的方法进行目标攻击时，几乎没有转移性提出基于集成的方法生成对抗样本，这样在进行目标攻击时可提高攻击成功率。","text":"贡献研究目标和非目标攻击，转移性在非目标攻击时更容易发生用已有的方法进行目标攻击时，几乎没有转移性提出基于集成的方法生成对抗样本，这样在进行目标攻击时可提高攻击成功率。 此前转移性只在小的数据集，如MNIST (LeCun et al. (1998)) and CIFAR-10 (Krizhevsky &amp; Hinton (2009))中进行试验，本论文在在大规模数据集，ImageNet (Russakovsky et al. (2015))进行试验 不同模型的梯度方向是正交的，决策边界是对齐的 攻击了Clarifai.com, a commercial com- pany providing state-of-the-art image classification services 转移性的研究：（1）在同样数据集的不同模型间 （2）相同模型在不相交的数据集上 （3）不同模型在不同数据集上","categories":[{"name":"论文","slug":"论文","permalink":"http://xiangyuwei.github.io/categories/论文/"}],"tags":[{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"ADVERSARIAL MACHINE LEARNING AT SCALE","slug":"ADVERSARIAL MACHINE LEARNING AT SCALE","date":"2017-11-09T08:06:59.668Z","updated":"2017-12-03T09:47:23.734Z","comments":true,"path":"2017/11/09/ADVERSARIAL MACHINE LEARNING AT SCALE/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/09/ADVERSARIAL MACHINE LEARNING AT SCALE/","excerpt":"摘要","text":"摘要 贡献比较了多种攻击方式构造的对抗样本在更大的数据集（imageNET ）上的实验结果， 单步攻击方法比多步攻击方法更具转移性 解决标签泄露问题 focusing on the question of how well adversarial examples transfer between different types of models, while we focus on defenses and studying howwell different types of adversarial example generation procedures transfer between relatively similar models 标签泄露是指如果分类器正确分类了由使用正确标签构造的对抗样本但是错分了相应的没有使用标签构造的对抗样本，这就说明有了标签泄露。","categories":[{"name":"论文","slug":"论文","permalink":"http://xiangyuwei.github.io/categories/论文/"}],"tags":[{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"},{"name":"论文集","slug":"论文集","permalink":"http://xiangyuwei.github.io/tags/论文集/"}]},{"title":"One pixel attack for fooling deep neural networks Jiawei","slug":"One pixel attack for fooling deep neural networks Jiawei","date":"2017-11-08T11:01:50.992Z","updated":"2017-12-03T09:48:43.435Z","comments":true,"path":"2017/11/08/One pixel attack for fooling deep neural networks Jiawei/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/08/One pixel attack for fooling deep neural networks Jiawei/","excerpt":"摘要在图像识别领域，基于 DNN 的方法突破了传统的图像处理技术，达到了可与人类媲美的结果 [9]。但是，多个研究证明自然图像中的人工扰动可以轻易使 DNN 对图像进行错误分类，研究者提出了生成此类「对抗图像」的高效算法","text":"摘要在图像识别领域，基于 DNN 的方法突破了传统的图像处理技术，达到了可与人类媲美的结果 [9]。但是，多个研究证明自然图像中的人工扰动可以轻易使 DNN 对图像进行错误分类，研究者提出了生成此类「对抗图像」的高效算法 [1, 2, 3, 4]。生成对抗图像（adversarial images）的主要方式是向准确分类的自然图像中添加精心设计的额外扰动，该扰动不影响人类对图像的识别。这样的修改导致分类器将修改后的图像标注为完全不同的其他物体。但是，大多数之前的攻击并未考虑非常有限的对抗实例，即扰动的量有时候也会影响到人眼的识别能力（示例见图 2）。此外，研究在有限场景中创建的对抗图像更加有趣，因为它们可能更接近原始类别和目标类别（target class）之间的边界，研究此类关键点可以使人类更多地了解 DNN 输入空间的几何特征 方法贡献 非目标攻击，修改1,3,5个像素黑盒攻击可攻击不同模型对特征目标有相同的扰动方向 方法它不抽象的问题将扰动搜索到任意显式的目标函数进行求解，而直接关注提高目标类别的概率标注值全局对抗扰动可以泄露标签 固定修改像素的个数，增改像素改变的强度 Differential evolution (DE) which belongs to the generalclass of genetic algorithm (GA 实验结论","categories":[{"name":"论文","slug":"论文","permalink":"http://xiangyuwei.github.io/categories/论文/"}],"tags":[{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"jsma 报错集","slug":"项目报错","date":"2017-11-03T01:28:33.684Z","updated":"2017-12-03T09:54:17.068Z","comments":true,"path":"2017/11/03/项目报错/","link":"","permalink":"http://xiangyuwei.github.io/2017/11/03/项目报错/","excerpt":"UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe9 in position 0: ordinal not in range(128)Python在进行编码方式之间的转换时，会将 unicode 作为“中间编码”，但 unicode 最大只有 128 那么长，所以这里当尝试将 ascii 编码字符串转换成”中间编码” unicode 时由于超出了其范围，就报出了如上错误。","text":"UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe9 in position 0: ordinal not in range(128)Python在进行编码方式之间的转换时，会将 unicode 作为“中间编码”，但 unicode 最大只有 128 那么长，所以这里当尝试将 ascii 编码字符串转换成”中间编码” unicode 时由于超出了其范围，就报出了如上错误。我们在/usr/lib/python2.7/site-packages/目录下添加一个sitecustomize.py文件，内容如下： import syssys.setdefaultencoding(‘utf-8’) 忘了操作什么什么之后报的错，记起后补上…… 参考博客 OSError: [Errno 2] No such file or directory１．代码上传服务器后，空文件没有上传，导致自己一直以为存在文件夹，不明白为什么错误，以后应仔细检查一遍２．在路径前加“./” raise IOError, ‘Not a gzipped file’服务器中代码运行报错，不能下载MNIST数据集, 1.首先在当前项目下新建 MNIST_data2.https://gitee.com/Gssol/tensorflow_mnist_Data/attach_files 从该目录将4个附件全部下载 将下载的四个文件(不用解压)直接放到MNIST_data文件夹里面4.就可以调用该数据集了参考博客 ValueError: Parent directory of trained_variables.ckpt doesn’t exist, can’t save.模型存储路径在本地没有加ckpt,可以运行，但在服务器上却必须加，原因不明 ##mport sklearn.model_selection 出错ImportError: No module named model_selectionconda list 查看包安装列表conda update scikit-learn 命令更新sklearn的版本 conda install Matlotlib、Scikit-Learn注意再激活tensorflow情况下查看某个指定环境的已安装包conda list -n python27查找package信息conda search numpy 安装packageconda install -n python27 numpy更新packageconda update -n python27 numpy 删除packageconda remove -n python27 numpy SCP: No such file or directoryscp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。符号软链接，应该写真正指向的地址，不明白这一点，所以浪费了很多时间 If you are logged into the local machine, you would use scp like this: scp /home/username/some.xml root@remote.machine.ip.address:/path/to/directory/ If you are logged into the remote machine (as in the OP), use scp like this: scp username@local.machine.ip.address:/home/username/some.xml /path/to/directory Substitute the IP addresses as directed in the commands./的问题还没弄明白 权限问题，上层目录也就是home目录被别人误改了权限，处理xxuser，其他用户都没了权限 ##anaconda search -t conda tensorflow 服务器上配置tensorflow 环境安装anocanda2 后，安装ＧＰＵ版本GPU安装只能用pip,conda只能安装cpu版本tensorflow版本简单 pip install tensorflow-gpu==1.1.0pip3 install tensorflow==1.1.0 python3.6 cpu版本 CUDA是NVIDIA 推出的使用GPU 资源进行计算的SDK ，CUDA 里面集成了显卡驱动,GPU加速首先就是安装CUDA，然而CUDA只支持NVIDIA显卡,因为CUDA软件就是他家出的注意GPU版本的不支持CUDNNV5，必须要V5.1以上GPU版本需要安装CUDA和ｃｕＤＮＮ,注意版本问题安装CUDA,参考一下网址：博客http://blog.csdn.net/binglel/article/details/70230276http://blog.csdn.net/stronger19890215/article/details/71411981?locationNum=8&amp;fps=1http://blog.csdn.net/jteng/article/details/52975247http://blog.csdn.net/zhaoyu106/article/details/52793183mingw CUDA安装和测试 检查自己的GPU是否是CUDA-capable在终端中输入： lspci | grep -i nvidia 安装qt createrhttps://www.ics.com/blog/getting-started-qt-and-qt-creator-linux sudo apt-get install qtcreator sudo apt-get install build-essential libgl1-mesa-dev cd ~/Downloads$ chmod a+x qt-unified-linux-x64-2.0.3-1-online.run apt-get install qt4-designer下载后找不到在哪儿运行 配置PyCharm1）打开PyCharm，执行快捷键ctrl+alt+s打开设置界面，输入tool，点开external tools，配置qtdesigner。 点击左上角的加号，作如下配置： 在Qt Designer的设置中，Program选择PyQt安装目录中 designer.exe 的路径 Work directory 使用变量 $FileDir$设置“PyUIC” – 这个主要是用来将 Qt界面 转换成 py代码 在PyUIC的设置中，其他的都差不多，Program 写入Python的地址，Parameters写入 -m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py 把上面的Python路径修改成自己的即可！ Work directory 使用变量 $FileDir$ 转化py代码 creater集成了pyqt desiner,sudo apt-get install qttools5-dev-tools这个因为安装了creater,暂时没试 Python中TypeError: unbound method 问题在运行时报错：TypeError: unbound method onlyCellValue() must be called with dictionary instance as first argument (got str instance instead) 后经在网上查看，发现时由于调用其他类时，未在后面添加括号，添加括号后，运行正常。这是由于未添加括号情况下，未被认为是类的实例，故报此错","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/categories/深度学习/"},{"name":"编程","slug":"深度学习/编程","permalink":"http://xiangyuwei.github.io/categories/深度学习/编程/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"官方文档","slug":"官网文档","date":"2017-10-30T01:49:50.750Z","updated":"2017-12-03T09:55:05.094Z","comments":true,"path":"2017/10/30/官网文档/","link":"","permalink":"http://xiangyuwei.github.io/2017/10/30/官网文档/","excerpt":"linux命令大全tensorflow中文官方文档tensorflow英文文档scipy","text":"linux命令大全tensorflow中文官方文档tensorflow英文文档scipy","categories":[{"name":"学习","slug":"学习","permalink":"http://xiangyuwei.github.io/categories/学习/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://xiangyuwei.github.io/tags/学习/"},{"name":"linux","slug":"linux","permalink":"http://xiangyuwei.github.io/tags/linux/"}]},{"title":"正则化","slug":"正则化","date":"2017-10-29T15:44:25.915Z","updated":"2017-12-03T09:55:02.442Z","comments":true,"path":"2017/10/29/正则化/","link":"","permalink":"http://xiangyuwei.github.io/2017/10/29/正则化/","excerpt":"正则化是为了解决过拟合问题。在Andrew Ng的机器学习视频中有提到（详见http://www.cnblogs.com/jianxinzhou/p/4083921.html）。","text":"正则化是为了解决过拟合问题。在Andrew Ng的机器学习视频中有提到（详见http://www.cnblogs.com/jianxinzhou/p/4083921.html）。 正则化产生了稀疏性（Sparsity），减少了特征向量个数，降低了模型的复杂度。 例如一回归问题，假设回归模型为：y=w1x1+w2x2+…+w1000*x1000+b 通过学习，如果最后学习到的w就只有很少的非零元素，大部分W为0或接近于0，例如只有5个非零的wi，那可以认为y之于这5个（因素）xi有关系，这更有利于人们对问题的认识和分析，抓住影响问题的主要方面（因素）更符合人们的认知习惯。(1)L0范数 L0范数是指向量中非零元素的个数。L0正则化的值是模型中非零参数的个数，L0正则化可以实现模型参数的的稀疏化 （2）L1范数 L1范数是指向量中各个元素绝对值之和，又叫“稀疏规则算子”（Lasso regularization）。 L1正则化和L2正则化可以看做是损失函数的惩罚项。所谓『惩罚』是指对损失函数中的某些参数做一些限制。知乎中陶轻松的答案指出正则项使W向量中项的个数最小化，从而防止过拟合","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/categories/深度学习/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"深度学习中激活函数","slug":"深度学习中激活函数","date":"2017-10-29T15:44:23.618Z","updated":"2017-12-03T09:55:49.694Z","comments":true,"path":"2017/10/29/深度学习中激活函数/","link":"","permalink":"http://xiangyuwei.github.io/2017/10/29/深度学习中激活函数/","excerpt":"在神经网络中，激活函数的作用是能够给神经网络加入一些非线性因素，使得神经网络可以更好地解决较为复杂的问题。激活函数众所周知有tanh,sigmoid,ReLU等。 tanh 双切正切函数，取值范围[-1,1]","text":"在神经网络中，激活函数的作用是能够给神经网络加入一些非线性因素，使得神经网络可以更好地解决较为复杂的问题。激活函数众所周知有tanh,sigmoid,ReLU等。 tanh 双切正切函数，取值范围[-1,1]sigmoid 采用S形函数，取值范围[0,1] ReLU 取的max(0,x) 简单而粗暴，大于0的留下，否则一律为0。 可微函数是指那些在定义域中所有点都存在导数的函数。 知乎忆臻的回答中激活函数是多个线性直线的组合，图像比较直观经网络中的激活函数（activation function）-Sigmoid, ReLu, TanHyperbolic(tanh) 梯度消失问题,由于激活函数的饱和性。几种常见的激活函数从神经网络的构建讲解激活函数。","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/categories/深度学习/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"python小知识","slug":"python小知识","date":"2017-10-29T13:41:54.552Z","updated":"2017-12-03T09:56:41.695Z","comments":true,"path":"2017/10/29/python小知识/","link":"","permalink":"http://xiangyuwei.github.io/2017/10/29/python小知识/","excerpt":"np.where()带一个星号（*）参数的函数传人的参数存储为一个元组（tuple）； 而带两个星号（*）参数的函数传人的参数则存储为一个字典（dict）","text":"np.where()带一个星号（*）参数的函数传人的参数存储为一个元组（tuple）； 而带两个星号（*）参数的函数传人的参数则存储为一个字典（dict） np.where()[0] 表示行的索引， np.where()[1] 则表示列的索引 shape函数是numpy.core.fromnumeric中的函数，它的功能是读取矩阵的长度，比如shape[0]就是读取矩阵第一维度的长度 pycharm 配置一、在PyCharm下为你的Python项目配置Python解释器 1、Settings–》Editor–》Project：当前项目名–》Project Interpreter–》Add Local 二、在Python下创建Python文件、Python模块 1、File–》New–》Python File 2、File–》New–》Python Package 三、使用PyCharm安装Python第三方模块 1、Settings–》Editor–》Project：当前项目名–》Project Interpreter–》点击右侧绿色加号 四、Python基本设置 1、不使用Tab，Tab=4空格：Editor–》Code Style–》Python–》Tabs and Indents页签 2、字体、字体颜色： Editor–》Colors &amp; Fonts–》Font/Language Defaults/Python 3、关闭自动更新： Editor–》Appearance &amp; Behavior–》System Settings–》Updates 4、脚本头设置： Editor–》Code Style–》File and Code Templates–》Python Script 5、显示行号： Editor–》General–》Appearance–》Show line numbers 6、右侧竖线是PEP8的代码规范：提示一行不要超过120个字符。 7、导出、导入你自定义的配置：File–》Export Settings、Import Settings 五、常用快捷键 Editor–》Keymap 1、Crtl + D ：复制当前行 2、Ctrl + Y ：删除当前行 3、Shift + Enter ：快速换行 4、Ctrl + / ：快速注释 （选中多行后可以批量注释） 5、Tab ：缩进当前行 （选中多行后可以批量缩进） 6、Shift + Tab ：取消缩进 （选中多行后可以批量取消缩进） 7、Ctrl + F ：查找 8、Ctrl + R ：替换 9、Ctrl + ] ：跳到行尾 10、Ctrl + [：跳到行首 六、PyCharm安装插件 1、 Editor–》Plugins Editor–》Browse repositories –》Install 七、Git配置 1、Editor–》Version Control–》Git 八、常用操作指南 1、复制文件路径：左侧文件列表右键选中的文件–》Copy Path 2、在文件管理器中打开：左侧文件列表右键选中的文件–》Show in Explorer 3、快速定位：Ctrl + 某些內建模块之后，点击在原文件中展开 Scroll from Source / Collapse All 4、查看结构：IDE左侧边栏Structure查看当前项目的结构 5、Tab批量换Space：Edit–》Convent Indents–》To Spaces/To Tobs 6、TODO的使用：#TODO要做的事情 7、把当前Tab页移到窗口右边（下边），方便对比：Tab页签右键–》Move to Right（Down） 8、查看文件修改前后对比：文件中右键–》Local History 9、IDE右下角一些有用的信息：当前光标在第几行的第几个字符/当前回车换行/当前编码类型/当前Git分支 10、IDE右侧边栏–》DataBase 九、PEP8代码规范 1、单独一行的注释：# + 1空格 + 注释内容 2、代码后跟着的注释：2空格 + # + 1空格 + 注释内容 十、SSH Terminal Default encoding 1、Editor–》Tools–》SSH Terminal–》Default encoding UTF-8 十一、编码统一 Editor–》File Encoding–》IDE Encoding 和 Project Encoding 编码统一 UTF-8 python中的字符数字之间的转换函数int(x [,base ]) 将x转换为一个整数 long(x [,base ]) 将x转换为一个长整数 float(x ) 将x转换到一个浮点数 complex(real [,imag ]) 创建一个复数str(x ) 将对象 x 转换为字符串repr(x ) 将对象 x 转换为表达式字符串eval(str ) 用来计算在字符串中的有效Python表达式,并返回一个对象tuple(s ) 将序列 s 转换为一个元组list(s ) 将序列 s 转换为一个列表chr(x ) 将一个整数转换为一个字符unichr(x ) 将一个整数转换为Unicode字符ord(x ) 将一个字符转换为它的整数值hex(x ) 将一个整数转换为一个十六进制字符串oct(x ) 将一个整数转换为一个八进制字符串 chr(65)=’A’ord(‘A’)=65 int(‘2’)=2;str(2)=’2’ 获取绝对路径，相对路径 &gt;os.path.abspath(“文件名”)： 显示的是一个文件的绝对路径 os.path.dirname(“文件名”): 显示的是一个文件的相对路径os.getcwd()——获得当前工作的目录os模块常用命令 文件和目录访问","categories":[{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/categories/python/"}],"tags":[{"name":"软件安装","slug":"软件安装","permalink":"http://xiangyuwei.github.io/tags/软件安装/"},{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/tags/python/"}]},{"title":"对抗样本","slug":"深度学习论文集","date":"2017-09-19T12:25:14.800Z","updated":"2017-12-03T09:58:25.990Z","comments":true,"path":"2017/09/19/深度学习论文集/","link":"","permalink":"http://xiangyuwei.github.io/2017/09/19/深度学习论文集/","excerpt":"“Explaining and Harnessing Adversarial Examples（对抗样本的解释和利用）”如何让神经网络把熊猫识别为秃鹫正向传播与反向传播的区别、这个博客表达了对此论文的一些看法。","text":"“Explaining and Harnessing Adversarial Examples（对抗样本的解释和利用）”如何让神经网络把熊猫识别为秃鹫正向传播与反向传播的区别、这个博客表达了对此论文的一些看法。 通过利用比你想象更简单（更线性！）的网络事实来做到这一点。我们会使用一个线性函数来逼近这个网络！ 生成对抗网络的发明人Ian Goodfellow在《Explaining and Harnessing Adversarial Examples》中提出了一种更快速方便的方法来产生对抗样本： 技术分享 这种方法的思想非常简单，就是让输入图像朝着让类别置信度降低的方向上移动一个在各个维度上都是技术分享这么大小的一步。因为输入通常是高维的（比如224x224），再加上现在的主流神经网络结构都是ReLU系的激活函数，线性程度其实很高，所以即使是很小的技术分享，每个维度的效果加一块，通常也足以对结果产生很大的影响，比如下面这样： 正则化激活函数优化问题的解决损失函数梯度 下面是L1正则化和L2正则化的作用，这些表述可以在很多文章中找到。 L1正则化和L2正则化可以看做是损失函数的惩罚项。所谓『惩罚』是指对损失函数中的某些参数做一些限制。对于线性回归模型，使用L1正则化的模型建叫做Lasso回归，使用L2正则化的模型叫做Ridge回归（岭回归）。L1正则化是指权值向量w中各个元素的绝对值之和，通常表示为||w||1 L2正则化是指权值向量w中各个元素的平方和然后再求平方根（可以看到Ridge回归的L2正则化项有平方符号），通常表示为||w||2 L1正则化可以产生稀疏权值矩阵，即产生一个稀疏模型，可以用于特征选择 L2正则化可以防止模型过拟合（overfitting）；一定程度上，L1也可以防止过拟合 Adversarial Examples and their implications - Deep Learning bits #3这篇博客主要引用别人论文介绍了概念。应用和几种对抗样本防御方法。对我比较新颖的一点是介绍了图像误分类的区别：一种是图像本身有歧义或者裁剪失败，再一种图像中包含很多类别。这些都可以造成分类器分类失败，但对抗样本是指它不是正常产生的，而是人为构造的。 ##我们可以利用对抗样本做什么 绕过安全过滤机制加载图片通过穿戴特别眼镜假冒他人编过人脸识别装置改变交通标志误导自动驾驶伪装武器躲避视频检测绕过声音或指纹识别 ##怎样防范该博客提出防止模型隐私泄露这种方法是不值得采用的。并列举几种论文中的方法，等详细看了之后在写。","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/categories/深度学习/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"对抗样本","slug":"对抗样本","permalink":"http://xiangyuwei.github.io/tags/对抗样本/"}]},{"title":"斯人若彩虹，遇上方知有","slug":"七夕","date":"2017-08-31T08:12:31.170Z","updated":"2017-08-31T08:12:31.177Z","comments":true,"path":"2017/08/31/七夕/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/31/七夕/","excerpt":"","text":"我们分担寒潮、风雷、霹雳；我们共享雾霭流岚、虹霓，仿佛永远分离，却又终身相依","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"七夕","slug":"七夕","permalink":"http://xiangyuwei.github.io/tags/七夕/"},{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/tags/随笔/"}]},{"title":"没想到你是这样的Linux | 终端下有趣的命令合集","slug":"Linux 有趣命令","date":"2017-08-27T10:31:40.936Z","updated":"2017-12-03T09:59:08.387Z","comments":true,"path":"2017/08/27/Linux 有趣命令/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/27/Linux 有趣命令/","excerpt":"转载Freebuf toilet简介","text":"转载Freebuf toilet简介 toilet能用字母拼写出更大字母的工具，具体拼出什么字由命令后面的参数决定，不仅如此，它还能打印出各种风格的效果，比如彩色，金属光泽等。安装 apt-get install toilet 参数解释 toilet -f mono12 -F metal FreeBuf sl简介 你可能了解Linux的ls命令，并经常使用它来查看文件夹的内容。但是，有些时候你可能会拼写成sl ,这时我们应该如何获得一些乐趣而不是看见“command not found”呢？某编程牛人也经常犯把ls敲成sl的错误，所以他自己编了一个程序娱乐一下,这个程序的作用很简单，就是当你输入sl的时候终端会出现一个火车呼啸而过～～安装 apt-get install sl cmatrix简介 《黑客帝国》的代码雨视觉特效。安装 apt-get install cmatrix 参数解释 -B: 字体加粗-C: 颜色 后面跟上参数颜色 cowsay简介 Cowsay命令是一个有趣的命令。它会用ASCII字符描绘牛，羊和许多其他动物。但是不是每个Linux发行版都带有这个命令。安装 apt-get install cowsay 参数解释 列出所有支持可用的动物:cowsay -l list sciinema简介 本文其实最初很多特效都用这个终端去录制的，但是由于需要引用外部的js，所以最后这些终端下的特效才换成了gif图。asciineme 可以完美录制完美终端下所敲的命令。官网:https://asciinema.org/","categories":[{"name":"Linux","slug":"Linux","permalink":"http://xiangyuwei.github.io/categories/Linux/"}],"tags":[{"name":"有趣命令","slug":"有趣命令","permalink":"http://xiangyuwei.github.io/tags/有趣命令/"},{"name":"软件安装","slug":"软件安装","permalink":"http://xiangyuwei.github.io/tags/软件安装/"}]},{"title":"深度学习资料","slug":"深度学习资料","date":"2017-08-23T12:24:13.801Z","updated":"2017-08-23T12:24:13.824Z","comments":true,"path":"2017/08/23/深度学习资料/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/23/深度学习资料/","excerpt":"深度学习资料2015年5月《自然》上刊登的一篇概述性论文《深度学习》（Deep learning），由我自己、Yoshua Bengio 、Geoff Hinton共同撰写。","text":"深度学习资料2015年5月《自然》上刊登的一篇概述性论文《深度学习》（Deep learning），由我自己、Yoshua Bengio 、Geoff Hinton共同撰写。 系统性的课本方面，由 Goodfellow、Bengio 和 Courville共同撰写的《深度学习》（Deep learning）（这个在网上有HTML版本，本书旨在帮助学生和从业人员入门机器学习，尤其是深度学习领域。HTML版本已经编辑完成，并且永久免费。网址：） 2012 年 IPAM上针对研究生的“深度学习和特征学习夏季课程”（这个夏季课程的授课老师包括 Geoff Hinton 、Yann LeCun、吴恩达、Yoshua Bengio等众多深度学习专家，历时半个多月时间，网上有完整视频录像：） 2015年在加拿大蒙特利尔市举行了“深度学习夏季课程”（该课程的对象为：已经具备的机器学习基本知识的研究生、业界工程师和研究人员，授课量十分丰富。 推荐一些关于特定平台的使用教程，比如Torch、TensorFlow 和 Theano。 百度paddle开发团队介绍的深度学习基本概念：深度学习适用于大数据.其中查了两个概念:word embedding,过拟合 知乎上关于深度学习入门的讨论,列了很多资料，一天搞懂深度学习图解深度学习这个网页动画做的很好。 机器学习中文社区 还有斯坦福大学公开课，讲机器学习,CS231 再看Dawn Song团队的一篇论文时查的VAEGAN（生成对抗网络）的最新应用状况结合代码讲解VAE-GAN比较透彻的一篇文章 应该搜搜深度学习暑期学校或深度学习项目实践 教程Udacity 深度学习知乎231翻译没有博士学位，照样玩转TensorFlow深度学习零基础入门深度学习 对抗样本MNIST的对抗噪声TensorFlow生成对抗样本（微信） https://yq.aliyun.com/articles/149583?utm_content=m_27089","categories":[{"name":"科研","slug":"科研","permalink":"http://xiangyuwei.github.io/categories/科研/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"}]},{"title":"当难过时","slug":"当难过时","date":"2017-08-22T07:47:08.179Z","updated":"2017-08-22T07:49:36.727Z","comments":true,"path":"2017/08/22/当难过时/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/当难过时/","excerpt":"","text":"一屋两人三餐四季","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"书单","slug":"书单","date":"2017-08-22T02:34:27.883Z","updated":"2017-08-22T07:55:30.674Z","comments":true,"path":"2017/08/22/书单/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/书单/","excerpt":"","text":"书单：理性乐观派","categories":[{"name":"读书","slug":"读书","permalink":"http://xiangyuwei.github.io/categories/读书/"}],"tags":[{"name":"书籍","slug":"书籍","permalink":"http://xiangyuwei.github.io/tags/书籍/"}]},{"title":"udacity知识点","slug":"udacity 知识点","date":"2017-08-22T02:34:27.882Z","updated":"2017-12-03T09:59:50.447Z","comments":true,"path":"2017/08/22/udacity 知识点/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/udacity 知识点/","excerpt":"splitext()作用类似与split(),不过它会根据扩展名分隔符而不是目录分隔符来分解路径 python 在内部使用两个字节来存储一个unicode，使用unicode对象而不是str的好处，就是unicode方便于跨平台。","text":"splitext()作用类似与split(),不过它会根据扩展名分隔符而不是目录分隔符来分解路径 python 在内部使用两个字节来存储一个unicode，使用unicode对象而不是str的好处，就是unicode方便于跨平台。你可以用如下两种方式定义一个unicode:Pythons1 = u”人生苦短”s2 = unicode(“人生苦短”, “utf-8”)12 s1 = u”人生苦短”s2 = unicode(“人生苦短”, “utf-8”) 在windows上面开始使用路径时，一定带上r，不然路径里面类似\\t \\n这种会被转义不信，自己找路径试试 Python pickle模块作用是持久化的储存数据。 numpy.random.shuffle打乱顺序函数：在做将caffe模型和预训练的参数转化为tensorflow的模型和预训练的参数，以便微调","categories":[{"name":"学习","slug":"学习","permalink":"http://xiangyuwei.github.io/categories/学习/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"},{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/tags/python/"}]},{"title":"anaconda+jupyter notebook安装","slug":"jupyter notebook 安装","date":"2017-08-22T02:34:27.882Z","updated":"2017-12-03T10:00:16.762Z","comments":true,"path":"2017/08/22/jupyter notebook 安装/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/jupyter notebook 安装/","excerpt":"安装anaconda2和anaconda3先在清华镜像站下载2和3可以任意先安装一个版本，然后另一个版本安装在/envs/py2路径下，py2是自己起的文件名。再打开CMD下载jupyter notebook 1pip install jupyter notebook notebook同时有两个版本时，可在kernel文件夹中，例如路径为D:\\ProgramData\\Anaconda3\\share\\jupyter\\kernels，放两个kernel 可把/envs文件下的python拷贝到此路径中。","text":"安装anaconda2和anaconda3先在清华镜像站下载2和3可以任意先安装一个版本，然后另一个版本安装在/envs/py2路径下，py2是自己起的文件名。再打开CMD下载jupyter notebook 1pip install jupyter notebook notebook同时有两个版本时，可在kernel文件夹中，例如路径为D:\\ProgramData\\Anaconda3\\share\\jupyter\\kernels，放两个kernel 可把/envs文件下的python拷贝到此路径中。","categories":[{"name":"python","slug":"python","permalink":"http://xiangyuwei.github.io/categories/python/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://xiangyuwei.github.io/tags/编程/"},{"name":"深度学习","slug":"深度学习","permalink":"http://xiangyuwei.github.io/tags/深度学习/"}]},{"title":"自动备份Hexo博客源文件","slug":"自动备份hexo","date":"2017-08-22T02:34:27.882Z","updated":"2017-12-03T10:01:13.424Z","comments":true,"path":"2017/08/22/自动备份hexo/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/自动备份hexo/","excerpt":"原文出自：http://zhujiegao.com/2015/12/06/automatic-backup/ 先安装git和node 原理通过通过监听Hexo的其它事件来完成自动执行Git命令完成自动备份。通过查阅Hexo文档，找到了Hexo的主要事件，见下表：","text":"原文出自：http://zhujiegao.com/2015/12/06/automatic-backup/ 先安装git和node 原理通过通过监听Hexo的其它事件来完成自动执行Git命令完成自动备份。通过查阅Hexo文档，找到了Hexo的主要事件，见下表： 事件名 事件发生时间 deployBefore 在部署完成前发布 deployAfter 在部署成功后发布 exit 在 Hexo 结束前发布 generateBefore 在静态文件生成前发布 generateAfter 在静态文件生成后发布 new 在文章文件建立后发布 实现 在Github下创建新的仓库，取名hexo 进入本地hexo文件夹，执行以下命令 123456git initgit remote add origin git@github.com:XXX/XXX.gitgit pull -u origin mastergit add .git commit -m &quot;添加hexo源码文件备份&quot;git pull -u origin master 3.安装shelljs模块要实现这个自动备份功能，需要依赖Node.js的一个shelljs模块,该模块重新包装了child_process,调用系统命令更加的方便。该模块需要安装后使用 1npm install --save shelljs 4 自动备份脚本 待到模块安装完成，在Hexo根目录的scripts文件夹下新建一个js文件，文件名随意取。 ps: 如果没有scripts目录，请新建一个。 然后在脚本中，写入以下内容： 123456789101112131415161718192021222324252627282930require(&apos;shelljs/global&apos;);try &#123; hexo.on(&apos;deployAfter&apos;, function() &#123;//当deploy完成后执行备份 run(); &#125;);&#125; catch (e) &#123; console.log(&quot;产生了一个错误&lt;(￣3￣)&gt; !，错误详情为：&quot; + e.toString());&#125;function run() &#123; if (!which(&apos;git&apos;)) &#123; echo(&apos;Sorry, this script requires git&apos;); exit(1); &#125; else &#123; echo(&quot;======================Auto Backup Begin===========================&quot;); cd(&apos;D:/hexo&apos;); //此处修改为Hexo根目录路径 if (exec(&apos;git add --all&apos;).code !== 0) &#123; echo(&apos;Error: Git add failed&apos;); exit(1); &#125; if (exec(&apos;git commit -am &quot;Form auto backup script\\&apos;s commit&quot;&apos;).code !== 0) &#123; echo(&apos;Error: Git commit failed&apos;); exit(1); &#125; if (exec(&apos;git push origin master&apos;).code !== 0) &#123; echo(&apos;Error: Git push failed&apos;); exit(1); &#125; echo(&quot;==================Auto Backup Complete============================&quot;) &#125;&#125;","categories":[{"name":"Web","slug":"Web","permalink":"http://xiangyuwei.github.io/categories/Web/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiangyuwei.github.io/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"http://xiangyuwei.github.io/tags/GitHub/"}]},{"title":"今夜 仰望星空","slug":"今夜 仰望星空","date":"2017-08-22T02:34:27.863Z","updated":"2017-07-05T16:00:41.037Z","comments":true,"path":"2017/08/22/今夜 仰望星空/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/今夜 仰望星空/","excerpt":"","text":"一片朦胧的夕光衬着暗绿的楼影你从雾雨中显现带着浴后的红晕多少语言和往事都在微笑中消溶我们走进了夜海去打捞遗失的繁星","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"寄语","slug":"寄语","permalink":"http://xiangyuwei.github.io/tags/寄语/"},{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"人生百态 千翻滋味","slug":"让我接受平庸的生活","date":"2017-08-22T02:34:27.862Z","updated":"2017-07-05T15:56:25.087Z","comments":true,"path":"2017/08/22/让我接受平庸的生活/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/让我接受平庸的生活/","excerpt":"","text":"红黄蓝白黑，酸甜苦辣咸。每个人都带着一生的历史，半个月的哀乐，在街上走。 ——汪曾祺 让我接受平庸的生活 作家苏芩在她的新书《你要世俗地活着，才有不俗的未来》里也讲过这样一段话： 了解俗世的规则，也懂得世俗外的享受，才深切地明白，如果没有足够的力量去赢得生活，那一切优雅的享用，都会转瞬即逝。美是一种力量，任何软绵绵的优雅都不值得被欣赏，你要知道：你能驾驭的，才是你真正拥有的。 因此，我们都需要修炼，在尘世的烟火中，修炼出一颗通透的心。成为这样一种人：可以很俗世，却又似在世俗之外。 希望你也可以，如愿活成自己梦想的样子。 不知，还在俗世中忙碌着的你，是否已然活成了自己梦想的样子了呢？ 我们终归要回到俗世的繁华中去磨砺成长，增长出足够的力量来支撑和应对庸忙的生活。所谓的诗意生活，并不是疏离尘世，而是让自己在尘世中修炼得更加清澈，通透。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"寄语","slug":"寄语","permalink":"http://xiangyuwei.github.io/tags/寄语/"},{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]},{"title":"利用Wireshark任意获取QQ好友IP实施精准定位","slug":"利用wireshark进行qq好友定位","date":"2017-08-22T02:34:27.847Z","updated":"2017-12-03T10:01:29.749Z","comments":true,"path":"2017/08/22/利用wireshark进行qq好友定位/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/利用wireshark进行qq好友定位/","excerpt":"利用Wireshark任意获取QQ好友IP实施精准定位在freebuf上看到了利用Wireshark任意获取QQ好友IP实施精准定位这篇文章，就想试试。wireshark抓取数据包，然后查找。 1,选择搜索 “字符串”; 2,选择搜索 “分组详情”;","text":"利用Wireshark任意获取QQ好友IP实施精准定位在freebuf上看到了利用Wireshark任意获取QQ好友IP实施精准定位这篇文章，就想试试。wireshark抓取数据包，然后查找。 1,选择搜索 “字符串”; 2,选择搜索 “分组详情”;3,填写搜索数据 “020048”; 当发现查找能自动定位到连接数据的时候就可以关闭电话邀请一个IP在线定位的网站openGPS.cn 进入页面后，选择高精度IP定位.wireshark功能使用的详细介绍 wireshark抓包常见提示含义解析 我是如何轻松拿到Google$1337现金奖励这篇文章主要是讲漏洞挖掘可适当关注Fofa、Shodan、Zoomeye等网络空间数据平台。","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://xiangyuwei.github.io/categories/数据分析/"}],"tags":[{"name":"wireshark","slug":"wireshark","permalink":"http://xiangyuwei.github.io/tags/wireshark/"}]},{"title":"沉默的大多数","slug":"一句话","date":"2017-08-22T02:34:27.847Z","updated":"2017-07-04T15:53:40.798Z","comments":true,"path":"2017/08/22/一句话/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/一句话/","excerpt":"","text":"一句话 区别对待 方向 伙伴 理解 话语权 探索与重复 晚安，好眠。：）","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"一句话","slug":"一句话","permalink":"http://xiangyuwei.github.io/tags/一句话/"}]},{"title":"DigitalOcean+shadowSocks + Docker 科学上网+挖矿","slug":"DigitalOcean+shadowSocks + Docker 科学上网","date":"2017-08-22T02:34:27.846Z","updated":"2017-08-09T06:57:37.555Z","comments":true,"path":"2017/08/22/DigitalOcean+shadowSocks + Docker 科学上网/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/DigitalOcean+shadowSocks + Docker 科学上网/","excerpt":"ss科学上网注册DigitalOcean，从这个链接 https://m.do.co/c/e70af193c2c0 进去可以有$10的优惠券。","text":"ss科学上网注册DigitalOcean，从这个链接 https://m.do.co/c/e70af193c2c0 进去可以有$10的优惠券。 参考教程上的步骤创建了一个Droplet,选了洛杉矶的服务器，不过好像有点慢，下载了DOcker,拉取了Docker中shadowSock镜像，端口号为1984,。另一篇参考。这篇里有详细解释。 这几天发现上不了外网，用docker ps 发现报错，连接不到守护进程，service docker stop 后 docker -d ,service docker start查看docker是否在运行ps aux | grep dockerdocker info查看信息2017/7/4 11:53:55windows查看端口被占用：123netstat -anonet -ano|findstr &quot;***&quot;tasklist|findstr &quot;***&quot; linux查看端口被占用123ps -aux | grep tomcatnetstat -apnps -aux | grep *** 使用shadowsocks，搭建ipv6 VPN，让ipv4上ipv6，下载速度提升到100M 一键脚本配置 前面配置的无法使用，原因不明，又用下图的配置了一遍。 挖矿第一步百度一不小心看到了服务器挖莱特比，心血来潮试了一下挖莱特币 接着在服务器上安cpuminer,最终没装上。先下载一堆依赖包,又在github上下载包,参考这篇博客，但`./config报错 gcc: error: unrecognized command line option ‘-V’gcc: fatal error: no input filescompilation terminated.configure:3447: $? = 1configure:3436: gcc -qversion &gt;&amp;5gcc: error: unrecognized command line option ‘-qversion’gcc: fatal error: no input filescompilation terminated.configure:3447: $? = 1configure:3467: checking whether the C compiler worksconfigure:3489: gcc -03 conftest.c &gt;&amp;5gcc: error: unrecognized command line option ‘-03’configure:3493: $? = 1configure:3531: result: no 按照这上面添加环境变量并没有解决。 这篇文章里的方法还没试。 Xshell生成密钥过程中想用Xshell连接服务器，发现需要用户密钥. 1#ssh-keygen -t rsa 生成密钥对服务器上的密钥在authorized_key文件中 安装vsftpd在服务器上安装了vsftpd which vsftpd看有没有安装vsftpd。123service vsftp start #启动服务service vsftp stop # 停止服务service vsftp restart #重启服务 用vi 修改配置文件 ：q是退出，当不存在任何没有保存的修改时它才会用:q!是退出并不保存。u可以取消刚才的修改，ctrl＋R可以取消你所取消的修改。注意：有：号的命令是先ESC，再：命令回车执行，不带：的，就是ESC后再输入执行。忘 了当前编辑的是什么文件，可以用ctrl＋G来查看。VI中可以执行命令。:!command就可以执行命令。命令完成后，可以按回车返回。甚至可以在VI中使用SHELL，（：！bash）从SHELL中执行几个命令后，exit退回到VI。保存退出，ZZ或:wq。 FTP传输ftp 传输有主动模式和被动模式，由客户端选择，一般cmd是主动模式，应在控制面板internet选项高级中把被动ftp关闭1ftp&gt;passive #可开/关被动模式 ftp 命令： open ip 打开连接 put 文件 上传文件 get 文件名 下载文件 close 关闭连接 bye/quit 离开ftp ftp 默认传输的文件在c盘的用户目录下标签（空格分隔）： 科学上网","categories":[{"name":"Web","slug":"Web","permalink":"http://xiangyuwei.github.io/categories/Web/"}],"tags":[{"name":"DigitalOceam","slug":"DigitalOceam","permalink":"http://xiangyuwei.github.io/tags/DigitalOceam/"},{"name":"科学上网","slug":"科学上网","permalink":"http://xiangyuwei.github.io/tags/科学上网/"},{"name":"Docker","slug":"Docker","permalink":"http://xiangyuwei.github.io/tags/Docker/"}]},{"title":"Hexo + github 博客搭建过程","slug":"Hexo + github 博客搭建过程","date":"2017-08-22T02:34:27.842Z","updated":"2017-12-03T10:21:17.857Z","comments":true,"path":"2017/08/22/Hexo + github 博客搭建过程/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/Hexo + github 博客搭建过程/","excerpt":"最近想建个博客记录一下平时的一些技术细节，以后可以随时翻翻，发现以前做过的事总是很容易忘记，真是好记性不如烂笔头,顺便整理一下思路。 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 搭建环境 Windows10 64位 node@4.4 后变成6.1.0 hexo@3.3.7","text":"最近想建个博客记录一下平时的一些技术细节，以后可以随时翻翻，发现以前做过的事总是很容易忘记，真是好记性不如烂笔头,顺便整理一下思路。 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 搭建环境 Windows10 64位 node@4.4 后变成6.1.0 hexo@3.3.7 前期 百度知道了搭建博客用wordpress等需要有服务器，买不起，虽然后面知道了GitHub大礼包，有digitalOcean 提供的优惠劵，但已经不想折腾wordpress了，以后再说。所以用了github page这个功能，再加上hexo ,类似的还有jekyll,但jekyll 好像命令有些复杂，而且需要依赖的东西有点多，所以选了hexo,hexo 用户量级好像不如jekyll。 Hexo 是什么 Hexo 可以快速，简洁，高效的搭建博客框架，方便的生成静态网页 托管在github上。它是台湾的@tommy351编写的，基于Node.js。 搭建博客安装git参考了博客http://blog.csdn.net/SmallCheric/article/details/51049683的教程，下载并安装了[Git](https://git-for-windows.github.io/) 用以下命令查看git版本1git --version 安装Node.jswindows环境下的Node.js的安装很简单,只需要下载客户端一路next就行了,第一次选择前面提到博客中的v4.4.0LTS版本64位的，后来因为css样式显示不出来，又下载了新版本V6.110，升级node又是一番折腾，后面再提。用以下命令查看版本号：1node -v 安装HexoNode.js 安装完成后，在电脑任意位置，右键选择GitBash ,执行npm命令 npm install -g hexo 安装完成后，建立一个文件夹（E:\\Hexo）,在建立的文件夹内右键,选择gitbush,执行以下命令，就在目标文件夹下创建建立博客所需的文件。 hexo init 然后 hexo install 初始化完成目录图： 这是参考了http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html的教程12＄hexo g #生成$hexo s #启动服务，本地浏览 执行以上命令，hexo会把public文件夹里的东西提交到github上，同时在public 文件夹中生成相关html文件。 hexo s 开启本地服务端口，打开浏览器http://localhost:4000 即可看到内容，啊哈^-^ ,没想到写到这个竟然解决的本地没有css的问题，原来自己一直是点击Index.html打开网页，不是用以上网址打开，所以css样式显示不出来，但是为什么呢，不求甚解，难道是不用那个网址没法渲染，找不到css样式，但自己看了看源代码，觉得应该能找到啊，不解。css 代码：1&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/./main.b3331d.css&quot;&gt; 顺便记录一下路径的问题： ./ 当前路径/ 网站根路径../ 上一层目录，如../../表示上上层目录 当前路径是指和本文件同在一个文件夹下，这是可以用相对路径。 修改端口号：执行命令hexo s -p 5000 修改主题官方主题下载了2个主题：hexo-them-jekyll和hexo-theme-yilia 下载主题：1$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 下载后的主题在themes文件夹中，修改—config.yml中的theme: landscape为theme: yilia,然后执行hexo g生成，注意hexo g 每次执行都会把public 文件夹的东西更新一次，还有theme 冒号后面注意有空格。 如果有问题，执行hexo clean,清理public 的内容，然后重新生成和发布。 上传 hexo上传代码会把以前的代码都删掉，注意备份。 首先，配置ssh_key,用ssh key 解决本地与服务器连接的问题。可参考百度经验。1$ cd ~/.ssh #检查本机已存在的ssh密钥 1$ ssh-keygen -t -C \"github注册邮件地址\" 会生成一个文件.ssh\\id_rsa.pub，复制里面的内容到github，个人设置-》SSH and GPG key中-》New SSh key 测试是否成功：1$ ssh -T git@github.com 然后配置：12$ git config --global user.name &quot;**&quot;// 你的github用户名，非昵称$ git config --global user.email &quot;xxx@qq.com&quot;// 填写你的github注册邮箱 配置：config_yml中deploy,1234deploy: type: git repository: git@github.com:lian/lian.github.io.git branch: master 后又改成这个，http似乎不能写成https1234deploy: type: git repository: http://github.com/lian/lian.github.io.git branch: master 如果报deployer not found,是因为没有安装插件。打开 git bash，输入hexo d提交改动代码到github。 保留CNAME等文件把这些文件放到source文件夹中，这里的所有文件会原样复制到public文件夹中。http://blog.liuxianan.com/build-blog-website-by-hexo-github.html 中可下载作者的md文件。 介绍markdawn 语法Hexo文件夹结构 设置next主题,参考博客。 搭建过程中问题1、生成时hexo 报错 Cannot read property ‘replace’ of null 解决： _config.yml 配置文件中的url 设置错误 123456# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://lian.github.ioroot: \\permalink: :year/:month/:day/:title/permalink_defaults: root 后是根路径，与css文件路径有关 2、 ERROR Plugin load failed: hexo-generator-json-content 升级node.js到最新稳定版升级node，参照博客,先安装gnvm，点击exe发现在cmd下找不到，弃之，后直接下载node安装。 执行命令 npm i hexo-generator-json-content –save 3、提交时出现错误ERROR Plugin load failed: hexo-deployer-git 解决 执行 npm install hexo-deployer-git –save 4、config 中文乱码 在sublime里打开，保存为GBK-8格式 常见hexo命令1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写：1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令：12hexo s -g #生成并本地预览hexo d -g #生成并上传 markdown12345678910在英文输入法下:&apos;&apos;&apos;&apos;&apos;&apos; 表示 代码块 #到###### 表示标题 ** dd** 加粗 * dd* 斜体 [ ]（） 链接&lt;！-- more --&gt;！[init]（连接） 图片* 标号 title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3]#文章标签，可空，多标签请用格式，注意:后面有个空格 域名解析用namecheap解析域名步骤参考文章 关于A解析和CNAME解析的区别： A解析：只能填IP地址，IP地址如果换了的话就需要换解析记录CNAME解析：解析到另一个域名，即使被指向的域名的ip发生变化，也不需要更改解析记录。CNAME优先级高于A解析（至少在DNSPOD是这样的） 给网站添加favicon这个和主题有关，默认可能没有，浏览器打开后根据开发者工具里可以看到当前主题下’favicon’的具体路径和要求文件格式，对应做一个就可以了。有时候是’png’但也有时候强制要求’.ico’，可以去比特虫等网站在线制作。 博客优化（12月2日更新）根据官网配置了本地搜索 社交链接 打赏功能 友情链接 百度统计 文章阅读量统计配置LeanCloud 文章【字数统计】、【阅读时长】统计功能 安装wordcount插件 npm i –save hexo-wordcountnpm install hexo-generator-searchdb –save 显示文字 用 Sublime Text 工具打开 post.swig 文件，路径如下：xxx_blog/themes/next/layout/_macro/post.swig 增加网站的浏览次数与访客数量统计功能网站的浏览次数，即pv；网站的访客数为uv。pv的计算方式是，单个用户连续点击n篇文章，记录n次访问量；uv的计算方式是，单个用户连续点击n篇文章，只记录1次访客数。你可以根据需要添加相应的统计功能。安装busuanzi.js脚本 如果你使用的是NexT主题（其他主题类似），打开/theme/next/layout/_partial/footer.swig文件，拷贝下面的代码至文件的开头。 显示统计标签 同样编辑/theme/next/layout/_partial/footer.swig文件。 如果你想要显示pv统计量，复制以下代码至你想要放置的位置， 本站总访问量次 如果你想要显示uv统计量，复制以下代码至你想要放置的位置， 本站访客数人次 hexo数学公式显示这个折腾了两天，放弃之后结果莫名其妙可以显示了。 主要使用的命令 npm install hexo-math –savehexo math installnpm uninstall hexo-renderer-marked –savenpm install hexo-renderer-kramed –savenpm install hexo-renderer-mathjax –save kramed是在marked上作了修改。hexo-renderer-kramed渲染后公式消失了，最终卸载了。 最终的方案： 用编辑器打开marked.js（在./node_modules/marked/lib/中）Step 1: escape: /^\\([\\`*{}[]()# +-.!_&gt;])/, 替换成 escape: /^\\([`*[]()# +-.!_&gt;])/, 这一步是在原基础上取消了对\\\\,\\{,\\}的转义(escape)Step 2: em: /^\\b_((?:[^_]|__)+?)_\\b|^*((?:**|[\\s\\S])+?)*(?!*)/, 替换成 em:/^*((?:**|[\\s\\S])+?)*(?!*)/, 进入到主题目录，找到_config.yml配置问题，把mathjax默认的false修改为true，具体如下： MathJax Supportmathjax: enable: true per_page: true 参考文献：http://blog.csdn.net/emptyset110/article/details/50123231 http://masikkk.com/article/hexo-13-MathJax/","categories":[{"name":"Web","slug":"Web","permalink":"http://xiangyuwei.github.io/categories/Web/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiangyuwei.github.io/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"http://xiangyuwei.github.io/tags/GitHub/"}]},{"title":"有趣的尝试","slug":"寄语","date":"2017-08-22T02:34:27.792Z","updated":"2017-07-04T04:26:04.317Z","comments":true,"path":"2017/08/22/寄语/","link":"","permalink":"http://xiangyuwei.github.io/2017/08/22/寄语/","excerpt":"","text":"寄语 “大部分人都是不好不坏，平庸乏味，跟一次性塑料饭盒一样。对这种长方形塑料，你连闻一闻的兴趣都不会有。大多数音乐、大部分书，都是。他们的刻度永远都打在一个最正确的正中间，永远不犯错、永远不会失败，最终出来一个光溜溜的东西。但美是不正确，美是错乱。”在《所有失败的鱼》里，绿妖这样说道。 明天就是新的一周，希望你也能开始一些全新而有趣的尝试。 晚安，好眠。：）","categories":[{"name":"随笔","slug":"随笔","permalink":"http://xiangyuwei.github.io/categories/随笔/"}],"tags":[{"name":"寄语","slug":"寄语","permalink":"http://xiangyuwei.github.io/tags/寄语/"},{"name":"心情","slug":"心情","permalink":"http://xiangyuwei.github.io/tags/心情/"}]}]}